2020-05-20 17:10:34 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-20 17:10:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-20 17:10:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-20 17:10:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-20 17:10:34 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-20 17:10:34 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-20 17:10:34 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-20 17:10:34 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-20 17:10:34 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-20 17:10:34 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-20 17:10:35 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-20 17:10:35 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-20 17:10:35 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-20 17:10:35 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-20 17:10:35 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-20 17:10:35 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@53fd0d10
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@53fd0d10
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@53fd0d10
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1f3f02ee
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@16ce702d
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6155d082
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@7803bfd
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@7803bfd
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7803bfd
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@74f5ce22
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@74f5ce22
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74f5ce22
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@dbd8e44
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@dbd8e44
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dbd8e44
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@7ac0e420
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@7ac0e420
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7ac0e420
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6995bf68
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6995bf68
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6995bf68
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@294a6b8e
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@294a6b8e
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@294a6b8e
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@16414e40
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@16414e40
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16414e40
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@53dbe163
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@53dbe163
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@18a136ac
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@18a136ac
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@134d26af
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@134d26af
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b3ed2f0
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3a12c404
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4982cc36
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4982cc36
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@22295ec4
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22295ec4
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@a22cb6a
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@a22cb6a
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7502291e
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7502291e
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@22875539
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@22875539
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@e8df99a
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@e8df99a
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@12ed9db6
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@12ed9db6
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@146587a2
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@146587a2
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d3c5255
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d3c5255
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@12c7a01b
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@12c7a01b
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@687ef2e0
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@687ef2e0
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@63f8276e
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@63f8276e
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@63f8276e
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@495fac5f
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@55dfcc6
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@55dfcc6
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@55dfcc6
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@25bfcafd
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@623e088f
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@2d6764b2
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d6764b2
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@13d73fa
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13d73fa
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3e30646a
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3e30646a
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@1fdf1c5
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1fdf1c5
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@32193bea
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@32193bea
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ebaa6cb
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@57abad67
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@57abad67
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@57abad67
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2dca0d64
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2dca0d64
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2dca0d64
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1cdc4c27
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@604f2bd2
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@366ac49b
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@366ac49b
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@366ac49b
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@663411de
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@663411de
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@663411de
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@33b1c5c5
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@34cdeda2
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@42721fe
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@42721fe
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@66746f57
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@17a1e4ca
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@17a1e4ca
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@c4ed84
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@c4ed84
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@112f364d
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@31d0e481
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@35d08e6c
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2807bdeb
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2807bdeb
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@39a8312f
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5f6722d3
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c532cd8
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@294e5088
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51972dc7
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-20 17:10:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-20 17:10:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-20 17:10:35 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-20 17:10:36 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-20 17:10:36 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-20 17:10:36 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-20 17:10:36 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-20 17:10:36 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-20 17:10:36 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-20 17:10:36 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-20 17:10:36 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-20 17:10:36 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-20 17:10:36 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-20 17:10:36 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-20 17:10:36 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-20 17:10:36 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ecd665] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45394b31]
2020-05-20 17:10:37 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-20 17:10:37 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-20 17:10:37 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-20 17:10:37 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-20 17:10:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-20 17:10:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-20 17:10:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-20 17:10:37 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-20 17:10:37 DEBUG PropertyBinder:266 - Building property id
2020-05-20 17:10:37 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-20 17:10:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-20 17:10:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-20 17:10:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-20 17:10:37 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-20 17:10:37 DEBUG PropertyBinder:266 - Building property description
2020-05-20 17:10:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-20 17:10:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-20 17:10:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-20 17:10:37 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-20 17:10:37 DEBUG PropertyBinder:266 - Building property title
2020-05-20 17:10:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-20 17:10:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-20 17:10:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-20 17:10:37 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-20 17:10:37 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-20 17:10:37 DEBUG Settings:68 - SessionFactory name : null
2020-05-20 17:10:37 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-20 17:10:37 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-20 17:10:37 DEBUG Settings:72 - Statistics: disabled
2020-05-20 17:10:37 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-20 17:10:37 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-20 17:10:37 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-20 17:10:37 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-20 17:10:37 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-20 17:10:37 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-20 17:10:37 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-20 17:10:37 DEBUG Settings:82 - Default null ordering: NONE
2020-05-20 17:10:37 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-20 17:10:37 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-20 17:10:37 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-20 17:10:37 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-20 17:10:37 DEBUG Settings:90 - Query language substitutions: {}
2020-05-20 17:10:37 DEBUG Settings:91 - Named query checking : enabled
2020-05-20 17:10:37 DEBUG Settings:93 - Second-level cache: disabled
2020-05-20 17:10:37 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-20 17:10:37 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-20 17:10:37 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-20 17:10:37 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-20 17:10:37 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-20 17:10:37 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-20 17:10:37 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-20 17:10:37 DEBUG Settings:102 - JDBC batch size: 15
2020-05-20 17:10:37 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-20 17:10:37 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-20 17:10:37 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-20 17:10:37 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-20 17:10:37 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-20 17:10:37 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-20 17:10:37 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-20 17:10:37 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-20 17:10:37 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-20 17:10:37 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-20 17:10:37 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-20 17:10:37 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-20 17:10:37 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7308ffff, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-20 17:10:37 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-20 17:10:37 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-20 17:10:37 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ecd665] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7063686f]
2020-05-20 17:10:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-20 17:10:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-20 17:10:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-20 17:10:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-20 17:10:37 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-20 17:10:37 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-20 17:10:37 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-05-20 17:10:37 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-20 17:10:37 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-20 17:10:37 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-20 17:10:37 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-20 17:10:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c98781a]
2020-05-20 17:10:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-20 17:10:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-20 17:10:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-20 17:10:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-20 17:10:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-20 17:10:37 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-20 17:10:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fba233d]
2020-05-20 17:10:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-20 17:10:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-20 17:10:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-20 17:10:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-20 17:10:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-20 17:10:37 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-20 17:10:37 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-20 17:10:37 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-20 17:10:37 DEBUG SQL:128 - drop table if exists movie
2020-05-20 17:10:37 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2f9a4401] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-20 17:10:37 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-20 17:10:37 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6c0905f6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-20 17:10:38 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-20 17:10:38 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-20 17:10:38 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-20 17:10:38 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-20 17:10:38 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-20 17:10:38 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-20 17:10:38 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4a901445
2020-05-20 17:10:38 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: da562255-9cb0-4aa3-ac96-d650ed258746 (<unnamed>)
2020-05-20 17:10:38 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-20 17:10:38 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-20 17:10:38 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-20 17:10:38 DEBUG TransactionImpl:81 - begin
2020-05-20 17:10:38 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-20 17:10:38 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-20 17:10:38 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-20 17:10:38 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-20 17:10:38 INFO  MovieDaoImpl:24 - New movies added to the database
2020-05-20 17:10:38 INFO  MovieDaoImpl:40 - All movies retrieved from the database
2020-05-20 17:10:38 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-20 17:10:38 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@111d5c97
2020-05-20 17:10:38 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-20 17:10:38 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-20 17:10:38 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-20 17:10:38 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-20 17:10:38 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-20 17:10:38 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-20 17:10:38 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-20 17:10:38 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-20 17:10:38 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-20 17:10:38 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-20 17:10:38 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-20 17:10:38 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-20 17:10:38 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-20 17:10:38 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-20 17:10:38 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-20 17:10:38 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-20 17:10:38 DEBUG SQL:128 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-20 17:10:38 DEBUG Loader:384 - Result set row: 0
2020-05-20 17:10:38 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-20 17:10:38 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-20 17:10:38 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-20 17:10:38 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-20 17:10:38 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-20 17:10:38 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-20 17:10:38 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-20 17:10:38 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-21 15:42:04 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 15:42:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 15:42:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 15:42:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 15:42:04 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-21 15:42:04 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 15:42:05 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-21 15:42:05 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-21 15:42:05 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-21 15:42:05 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 15:42:05 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 15:42:05 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 15:42:05 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 15:42:05 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 15:42:05 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 15:42:05 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@24111ef1
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@24111ef1
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@24111ef1
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71812481
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47f9738
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2ea6e30c
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@62ef27a8
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@62ef27a8
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@62ef27a8
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@1afdd473
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@1afdd473
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1afdd473
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@2f1de2d6
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@2f1de2d6
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f1de2d6
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@3da30852
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@3da30852
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3da30852
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3568f9d2
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3568f9d2
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3568f9d2
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3549bca9
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@3549bca9
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3549bca9
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@46dffdc3
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@46dffdc3
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@46dffdc3
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4748a0f9
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4748a0f9
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@176b3f44
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@176b3f44
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@31bcf236
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@31bcf236
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7862f56
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@149dd36b
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@e19bb76
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@e19bb76
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@1a760689
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1a760689
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@2e2ff723
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2e2ff723
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@46944ca9
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@46944ca9
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2a448449
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2a448449
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@517566b
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@517566b
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55322aab
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55322aab
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@126945f9
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@126945f9
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4879dfad
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4879dfad
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@62727399
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@62727399
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@1e636ea3
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e636ea3
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6bbe2511
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6bbe2511
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6bbe2511
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79d94571
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@1852a3ff
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1852a3ff
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1852a3ff
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2a76840c
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@2fc6f97f
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@6fe1b4fb
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6fe1b4fb
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@74c79fa2
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@74c79fa2
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37c7595
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37c7595
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@7d64e326
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d64e326
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@758705fa
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@758705fa
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@436bc36
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@52851b44
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@52851b44
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@52851b44
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@23aa363a
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@23aa363a
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@23aa363a
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e8ce150
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@628c4ac0
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@62e20a76
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@62e20a76
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@62e20a76
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75cd8043
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75cd8043
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75cd8043
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@9ef8eb7
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4535b6d5
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@5b619d14
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b619d14
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@28e8dde3
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@4a194c39
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a194c39
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@362045c0
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@362045c0
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@59252cb6
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@542e560f
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@6b3e12b5
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@2c5529ab
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c5529ab
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@294e5088
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51972dc7
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31000e60
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d470d0
2020-05-21 15:42:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@24d09c1
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 15:42:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 15:42:06 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 15:42:06 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-21 15:42:06 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-21 15:42:06 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 15:42:06 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 15:42:06 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 15:42:07 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-21 15:42:07 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-21 15:42:07 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 15:42:07 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-21 15:42:07 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 15:42:07 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 15:42:07 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 15:42:07 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b0ca5e1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5bb3131b]
2020-05-21 15:42:07 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-21 15:42:07 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 15:42:07 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 15:42:07 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-21 15:42:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 15:42:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 15:42:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-21 15:42:07 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 15:42:07 DEBUG PropertyBinder:266 - Building property id
2020-05-21 15:42:07 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 15:42:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 15:42:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 15:42:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-21 15:42:07 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 15:42:07 DEBUG PropertyBinder:266 - Building property description
2020-05-21 15:42:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-21 15:42:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-21 15:42:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-21 15:42:07 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-21 15:42:07 DEBUG PropertyBinder:266 - Building property title
2020-05-21 15:42:07 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 15:42:07 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 15:42:07 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-21 15:42:07 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 15:42:07 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-21 15:42:07 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 15:42:07 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 15:42:07 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 15:42:07 DEBUG Settings:72 - Statistics: disabled
2020-05-21 15:42:07 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 15:42:07 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 15:42:07 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 15:42:07 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 15:42:07 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-21 15:42:07 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 15:42:07 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 15:42:07 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 15:42:07 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 15:42:07 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 15:42:07 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 15:42:07 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 15:42:07 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 15:42:07 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 15:42:07 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 15:42:07 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 15:42:07 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 15:42:07 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 15:42:07 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 15:42:07 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 15:42:07 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 15:42:07 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 15:42:07 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 15:42:07 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 15:42:07 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 15:42:07 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 15:42:07 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 15:42:07 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 15:42:07 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 15:42:07 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 15:42:07 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-21 15:42:07 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-21 15:42:07 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-21 15:42:07 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-21 15:42:07 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-21 15:42:07 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@63716833, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-21 15:42:07 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 15:42:07 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-21 15:42:07 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b0ca5e1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7c853486]
2020-05-21 15:42:07 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-21 15:42:07 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-21 15:42:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-21 15:42:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-21 15:42:08 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-21 15:42:08 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-21 15:42:08 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-05-21 15:42:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-21 15:42:08 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-21 15:42:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 15:42:08 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-21 15:42:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53abfc07]
2020-05-21 15:42:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 15:42:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-21 15:42:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 15:42:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 15:42:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 15:42:08 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-21 15:42:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76332405]
2020-05-21 15:42:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 15:42:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-21 15:42:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 15:42:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 15:42:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 15:42:08 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-21 15:42:08 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-21 15:42:08 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-21 15:42:08 DEBUG SQL:128 - drop table if exists movie
2020-05-21 15:42:08 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3e5fd2b1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 15:42:08 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-21 15:42:08 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5115f590] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 15:42:08 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 15:42:08 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 15:42:08 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 15:42:08 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 15:42:08 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 15:42:08 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 15:42:08 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d61a348
2020-05-21 15:42:08 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 0138e43b-c5f5-47d7-9b05-e38fcaf144e7 (<unnamed>)
2020-05-21 15:42:08 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 15:42:08 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 15:42:08 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 15:42:08 DEBUG TransactionImpl:81 - begin
2020-05-21 15:42:08 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 15:42:08 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-21 15:42:08 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 15:42:08 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 15:42:08 INFO  MovieDaoImpl:26 - New movie Lord of the rings 1 has been added to the database
2020-05-21 15:42:08 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 15:42:08 DEBUG TransactionImpl:81 - begin
2020-05-21 15:42:08 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 15:42:08 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-21 15:42:08 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-21 15:42:08 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 15:42:08 INFO  MovieDaoImpl:26 - New movie Matrix 2 has been added to the database
2020-05-21 15:42:08 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 15:42:08 DEBUG TransactionImpl:81 - begin
2020-05-21 15:42:08 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 15:42:08 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-21 15:42:08 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-21 15:42:08 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 15:42:08 INFO  MovieDaoImpl:26 - New movie The Empire strikes back 3 has been added to the database
2020-05-21 15:42:08 INFO  MovieDaoImpl:43 - All movies retrieved from the database
2020-05-21 15:42:08 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 15:42:08 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@111d5c97
2020-05-21 15:42:08 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-21 15:42:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 15:42:08 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 15:42:08 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 15:42:08 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 15:42:08 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 15:42:08 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 15:42:08 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 15:42:08 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 15:42:08 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-21 15:42:08 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 15:42:08 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-21 15:42:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 15:42:08 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-21 15:42:08 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-21 15:42:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 15:42:08 DEBUG SQL:128 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-21 15:42:08 DEBUG Loader:384 - Result set row: 0
2020-05-21 15:42:08 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-21 15:42:08 DEBUG Loader:384 - Result set row: 1
2020-05-21 15:42:08 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-21 15:42:08 DEBUG Loader:384 - Result set row: 2
2020-05-21 15:42:08 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-21 15:42:08 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-21 15:42:08 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:24:09 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 00:24:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 00:24:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 00:24:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 00:24:09 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 00:24:09 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 00:24:10 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 00:24:10 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 00:24:10 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 00:24:10 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 00:24:10 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 00:24:10 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 00:24:10 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 00:24:10 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 00:24:10 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 00:24:10 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b94089b
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a5ecce3
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2dcd168a
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1941a8ff
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1156a7
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@71529963
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71529963
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3212a8d7
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eda25e5
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6179e425
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@604c5de8
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1d3ac898
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@30b19518
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6ee660fb
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4372b9b6
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54dcfa5a
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3243b914
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dc8caa7
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1338fb5
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31000e60
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d470d0
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24d09c1
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54c62d71
2020-05-22 00:24:11 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65045a87
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:24:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 00:24:11 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 00:24:11 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 00:24:11 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 00:24:11 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 00:24:11 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 00:24:11 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 00:24:12 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 00:24:12 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 00:24:12 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 00:24:12 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 00:24:12 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 00:24:12 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 00:24:12 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 00:24:12 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74fef3f7]
2020-05-22 00:24:12 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 00:24:12 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:24:12 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 00:24:12 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 00:24:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:24:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:24:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 00:24:12 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:24:12 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:24:12 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:24:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:24:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:24:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 00:24:12 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:24:12 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:24:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 00:24:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 00:24:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 00:24:12 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 00:24:12 DEBUG PropertyBinder:266 - Building property title
2020-05-22 00:24:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:24:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:24:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 00:24:12 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 00:24:12 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 00:24:12 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 00:24:12 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 00:24:12 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 00:24:12 DEBUG Settings:72 - Statistics: disabled
2020-05-22 00:24:12 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 00:24:12 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 00:24:12 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 00:24:12 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 00:24:12 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 00:24:12 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 00:24:12 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 00:24:12 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 00:24:12 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 00:24:12 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 00:24:12 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 00:24:12 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 00:24:12 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 00:24:12 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 00:24:12 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 00:24:12 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 00:24:12 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 00:24:12 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 00:24:12 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 00:24:12 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 00:24:12 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 00:24:12 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 00:24:12 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 00:24:12 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 00:24:12 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 00:24:12 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 00:24:12 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 00:24:12 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 00:24:13 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 00:24:13 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 00:24:13 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 00:24:13 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 00:24:13 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 00:24:13 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 00:24:13 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 00:24:13 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3fbfbf84, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 00:24:13 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 00:24:13 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 00:24:13 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1046498a]
2020-05-22 00:24:13 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:24:13 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:24:13 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:24:13 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:24:13 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 00:24:13 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 00:24:13 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-05-22 00:24:13 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 00:24:13 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 00:24:13 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 00:24:13 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 00:24:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@80bfa9d]
2020-05-22 00:24:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:24:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:24:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:24:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:24:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:24:13 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:24:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1d8e1a]
2020-05-22 00:24:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:24:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:24:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:24:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:24:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:24:13 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:24:13 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:24:13 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:24:13 DEBUG SQL:128 - drop table if exists movie
2020-05-22 00:24:13 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5b275811] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:24:13 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:24:13 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@11e355ca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:24:13 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 00:24:13 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 00:24:13 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:24:13 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:24:13 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 00:24:13 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 00:24:13 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d2291de
2020-05-22 00:24:13 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: a730a15d-78b4-4c5b-8228-faa982539e62 (<unnamed>)
2020-05-22 00:24:13 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 00:24:14 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 00:24:14 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:24:14 DEBUG TransactionImpl:81 - begin
2020-05-22 00:24:14 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:24:14 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:24:14 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:24:14 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:24:14 INFO  MovieDaoImpl:27 - New movie Lord of the rings 1 has been added to the database
2020-05-22 00:24:14 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:24:14 DEBUG TransactionImpl:81 - begin
2020-05-22 00:24:14 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:24:14 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:24:14 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:24:14 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:24:14 INFO  MovieDaoImpl:27 - New movie Matrix 2 has been added to the database
2020-05-22 00:24:14 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:24:14 DEBUG TransactionImpl:81 - begin
2020-05-22 00:24:14 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:24:14 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:24:14 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 00:24:14 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:24:14 INFO  MovieDaoImpl:27 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 00:24:14 INFO  MovieDaoImpl:44 - All movies retrieved from the database
2020-05-22 00:24:14 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 00:24:14 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@250a9031
2020-05-22 00:24:14 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:24:14 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:24:14 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:24:14 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:24:14 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 00:24:14 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 00:24:14 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:24:14 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 00:24:14 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:24:14 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 00:24:14 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:24:14 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 00:24:14 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:24:14 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:24:14 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:24:14 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:24:14 DEBUG SQL:128 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:24:14 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:24:14 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 00:24:14 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:24:14 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 00:24:14 DEBUG Loader:384 - Result set row: 2
2020-05-22 00:24:14 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:24:14 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 00:24:14 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:24:56 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 00:24:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 00:24:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 00:24:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 00:24:56 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 00:24:56 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 00:24:56 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 00:24:56 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 00:24:56 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 00:24:56 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 00:24:56 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 00:24:56 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 00:24:56 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 00:24:57 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 00:24:57 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 00:24:57 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b94089b
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a5ecce3
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2dcd168a
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1941a8ff
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1156a7
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@71529963
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71529963
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3212a8d7
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eda25e5
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6179e425
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@604c5de8
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1d3ac898
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@30b19518
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6ee660fb
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4372b9b6
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54dcfa5a
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3243b914
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dc8caa7
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1338fb5
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31000e60
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d470d0
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24d09c1
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54c62d71
2020-05-22 00:24:57 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65045a87
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:24:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 00:24:57 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 00:24:57 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 00:24:57 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 00:24:57 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 00:24:57 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 00:24:57 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 00:24:58 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 00:24:58 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 00:24:58 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 00:24:58 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 00:24:58 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 00:24:58 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 00:24:58 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 00:24:58 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74fef3f7]
2020-05-22 00:24:58 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 00:24:58 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:24:58 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 00:24:58 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 00:24:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:24:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:24:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 00:24:58 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:24:58 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:24:58 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:24:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:24:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:24:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 00:24:58 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:24:58 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:24:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 00:24:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 00:24:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 00:24:58 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 00:24:58 DEBUG PropertyBinder:266 - Building property title
2020-05-22 00:24:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:24:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:24:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 00:24:58 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 00:24:58 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 00:24:58 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 00:24:58 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 00:24:58 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 00:24:58 DEBUG Settings:72 - Statistics: disabled
2020-05-22 00:24:58 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 00:24:58 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 00:24:58 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 00:24:58 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 00:24:58 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 00:24:58 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 00:24:58 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 00:24:58 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 00:24:58 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 00:24:58 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 00:24:58 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 00:24:58 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 00:24:58 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 00:24:58 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 00:24:58 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 00:24:58 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 00:24:58 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 00:24:58 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 00:24:58 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 00:24:58 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 00:24:58 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 00:24:58 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 00:24:58 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 00:24:58 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 00:24:58 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 00:24:58 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 00:24:58 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 00:24:58 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 00:24:58 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 00:24:58 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 00:24:58 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 00:24:58 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 00:24:58 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 00:24:58 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 00:24:59 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 00:24:59 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3fbfbf84, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 00:24:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 00:24:59 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 00:24:59 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1046498a]
2020-05-22 00:24:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:24:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:24:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:24:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:24:59 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 00:24:59 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 00:24:59 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-05-22 00:24:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 00:24:59 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 00:24:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 00:24:59 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 00:24:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@80bfa9d]
2020-05-22 00:24:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:24:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:24:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:24:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:24:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:24:59 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:24:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1d8e1a]
2020-05-22 00:24:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:24:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:24:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:24:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:24:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:24:59 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:24:59 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:24:59 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:24:59 DEBUG SQL:128 - drop table if exists movie
2020-05-22 00:24:59 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5b275811] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:24:59 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:24:59 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@11e355ca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:24:59 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 00:24:59 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 00:24:59 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:24:59 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:24:59 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 00:24:59 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 00:24:59 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d2291de
2020-05-22 00:24:59 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: b9208ef2-1e7a-49a4-b627-c00ae446c0b0 (<unnamed>)
2020-05-22 00:24:59 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 00:24:59 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 00:24:59 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:24:59 DEBUG TransactionImpl:81 - begin
2020-05-22 00:24:59 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:24:59 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:24:59 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:24:59 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:24:59 INFO  MovieDaoImpl:27 - New movie Lord of the rings 1 has been added to the database
2020-05-22 00:24:59 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:24:59 DEBUG TransactionImpl:81 - begin
2020-05-22 00:24:59 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:24:59 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:24:59 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:24:59 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:24:59 INFO  MovieDaoImpl:27 - New movie Matrix 2 has been added to the database
2020-05-22 00:24:59 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:24:59 DEBUG TransactionImpl:81 - begin
2020-05-22 00:24:59 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:24:59 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:24:59 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 00:24:59 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:24:59 INFO  MovieDaoImpl:27 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 00:24:59 INFO  MovieDaoImpl:44 - All movies retrieved from the database
2020-05-22 00:24:59 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 00:25:00 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@250a9031
2020-05-22 00:25:00 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:25:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:25:00 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:25:00 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:25:00 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 00:25:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 00:25:00 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:25:00 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 00:25:00 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:25:00 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 00:25:00 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:25:00 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 00:25:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:25:00 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:25:00 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:25:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:25:00 DEBUG SQL:128 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:25:00 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:25:00 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 00:25:00 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:25:00 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 00:25:00 DEBUG Loader:384 - Result set row: 2
2020-05-22 00:25:00 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:25:00 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 00:25:00 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:25:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:25:00 DEBUG TransactionImpl:81 - begin
2020-05-22 00:25:00 DEBUG TransactionImpl:139 - rolling back
2020-05-22 00:28:26 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 00:28:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 00:28:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 00:28:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 00:28:26 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 00:28:26 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 00:28:26 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 00:28:26 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 00:28:26 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 00:28:26 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 00:28:27 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 00:28:27 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 00:28:27 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 00:28:27 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 00:28:27 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 00:28:27 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b94089b
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a5ecce3
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2dcd168a
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1941a8ff
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1156a7
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@71529963
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71529963
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3212a8d7
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eda25e5
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6179e425
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@604c5de8
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1d3ac898
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@30b19518
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6ee660fb
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4372b9b6
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54dcfa5a
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3243b914
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dc8caa7
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1338fb5
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31000e60
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d470d0
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24d09c1
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54c62d71
2020-05-22 00:28:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65045a87
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:28:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 00:28:28 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 00:28:28 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 00:28:28 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 00:28:28 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 00:28:28 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 00:28:28 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 00:28:28 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 00:28:28 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 00:28:28 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 00:28:28 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 00:28:29 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 00:28:29 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 00:28:29 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 00:28:29 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74fef3f7]
2020-05-22 00:28:29 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 00:28:29 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:28:29 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 00:28:29 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 00:28:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:28:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:28:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 00:28:29 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:28:29 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:28:29 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:28:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:28:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:28:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 00:28:29 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:28:29 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:28:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 00:28:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 00:28:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 00:28:29 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 00:28:29 DEBUG PropertyBinder:266 - Building property title
2020-05-22 00:28:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:28:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:28:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 00:28:29 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 00:28:29 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 00:28:29 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 00:28:29 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 00:28:29 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 00:28:29 DEBUG Settings:72 - Statistics: disabled
2020-05-22 00:28:29 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 00:28:29 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 00:28:29 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 00:28:29 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 00:28:29 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 00:28:29 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 00:28:29 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 00:28:29 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 00:28:29 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 00:28:29 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 00:28:29 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 00:28:29 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 00:28:29 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 00:28:29 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 00:28:29 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 00:28:29 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 00:28:29 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 00:28:29 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 00:28:29 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 00:28:29 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 00:28:29 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 00:28:29 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 00:28:29 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 00:28:29 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 00:28:29 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 00:28:29 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 00:28:29 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 00:28:29 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 00:28:29 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 00:28:29 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 00:28:29 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 00:28:29 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 00:28:29 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 00:28:29 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 00:28:29 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 00:28:29 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3fbfbf84, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 00:28:29 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 00:28:29 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 00:28:29 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1046498a]
2020-05-22 00:28:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:28:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:28:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:28:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:28:30 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 00:28:30 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 00:28:30 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-05-22 00:28:30 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 00:28:30 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 00:28:30 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 00:28:30 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 00:28:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@80bfa9d]
2020-05-22 00:28:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:28:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:28:30 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:28:30 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:28:30 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:28:30 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:28:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1d8e1a]
2020-05-22 00:28:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:28:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:28:30 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:28:30 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:28:30 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:28:30 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:28:30 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:28:30 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:28:30 DEBUG SQL:128 - drop table if exists movie
2020-05-22 00:28:30 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5b275811] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:28:30 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:28:30 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@11e355ca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:28:30 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 00:28:30 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 00:28:30 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:28:30 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:28:30 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 00:28:30 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 00:28:30 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d2291de
2020-05-22 00:28:30 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 07ab59e1-68c6-4b56-8e68-0d28ea760b25 (<unnamed>)
2020-05-22 00:28:30 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 00:28:30 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 00:28:30 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:28:30 DEBUG TransactionImpl:81 - begin
2020-05-22 00:28:30 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:28:30 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:28:30 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:28:30 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:28:30 INFO  MovieDaoImpl:27 - New movie Lord of the rings 1 has been added to the database
2020-05-22 00:28:30 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:28:30 DEBUG TransactionImpl:81 - begin
2020-05-22 00:28:30 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:28:30 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:28:30 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:28:30 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:28:30 INFO  MovieDaoImpl:27 - New movie Matrix 2 has been added to the database
2020-05-22 00:28:30 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:28:30 DEBUG TransactionImpl:81 - begin
2020-05-22 00:28:30 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:28:30 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:28:30 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 00:28:30 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:28:30 INFO  MovieDaoImpl:27 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 00:28:30 INFO  MovieDaoImpl:44 - All movies retrieved from the database
2020-05-22 00:28:30 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 00:28:30 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@250a9031
2020-05-22 00:28:31 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:28:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:28:31 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:28:31 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:28:31 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 00:28:31 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 00:28:31 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:28:31 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 00:28:31 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:28:31 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 00:28:31 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:28:31 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 00:28:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:28:31 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:28:31 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:28:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:28:31 DEBUG SQL:128 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:28:31 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:28:31 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 00:28:31 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:28:31 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 00:28:31 DEBUG Loader:384 - Result set row: 2
2020-05-22 00:28:31 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:31 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 00:28:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:28:31 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:28:31 DEBUG TransactionImpl:81 - begin
2020-05-22 00:28:31 DEBUG TransactionImpl:139 - rolling back
2020-05-22 00:28:45 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 00:28:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 00:28:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 00:28:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 00:28:46 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 00:28:46 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 00:28:46 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 00:28:46 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 00:28:46 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 00:28:46 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 00:28:47 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 00:28:47 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 00:28:47 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 00:28:47 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 00:28:47 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 00:28:47 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b94089b
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a5ecce3
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2dcd168a
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1941a8ff
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1156a7
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@71529963
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71529963
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3212a8d7
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eda25e5
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6179e425
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@604c5de8
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1d3ac898
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@30b19518
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6ee660fb
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4372b9b6
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54dcfa5a
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3243b914
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dc8caa7
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1338fb5
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31000e60
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d470d0
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24d09c1
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54c62d71
2020-05-22 00:28:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65045a87
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:28:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 00:28:47 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 00:28:47 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 00:28:47 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 00:28:47 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 00:28:47 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 00:28:47 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 00:28:48 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 00:28:48 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 00:28:48 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 00:28:48 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 00:28:48 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 00:28:48 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 00:28:49 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 00:28:49 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74fef3f7]
2020-05-22 00:28:49 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 00:28:49 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:28:49 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 00:28:49 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 00:28:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:28:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:28:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 00:28:49 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:28:49 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:28:49 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:28:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:28:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:28:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 00:28:49 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:28:49 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:28:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 00:28:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 00:28:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 00:28:49 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 00:28:49 DEBUG PropertyBinder:266 - Building property title
2020-05-22 00:28:49 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:28:49 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:28:49 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 00:28:49 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 00:28:49 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 00:28:49 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 00:28:49 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 00:28:49 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 00:28:49 DEBUG Settings:72 - Statistics: disabled
2020-05-22 00:28:49 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 00:28:49 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 00:28:49 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 00:28:49 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 00:28:49 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 00:28:49 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 00:28:49 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 00:28:49 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 00:28:49 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 00:28:49 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 00:28:49 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 00:28:49 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 00:28:49 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 00:28:49 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 00:28:49 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 00:28:49 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 00:28:49 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 00:28:49 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 00:28:49 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 00:28:49 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 00:28:49 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 00:28:49 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 00:28:49 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 00:28:49 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 00:28:49 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 00:28:49 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 00:28:49 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 00:28:49 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 00:28:49 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 00:28:49 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 00:28:49 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 00:28:49 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 00:28:49 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 00:28:49 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 00:28:49 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 00:28:49 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3fbfbf84, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 00:28:49 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 00:28:49 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 00:28:49 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1046498a]
2020-05-22 00:28:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:28:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:28:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:28:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:28:49 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 00:28:49 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 00:28:49 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-05-22 00:28:49 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 00:28:49 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 00:28:49 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 00:28:49 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 00:28:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@80bfa9d]
2020-05-22 00:28:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:28:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:28:49 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:28:49 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:28:49 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:28:49 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:28:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1d8e1a]
2020-05-22 00:28:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:28:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:28:49 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:28:49 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:28:49 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:28:49 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:28:49 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:28:49 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:28:50 DEBUG SQL:128 - drop table if exists movie
2020-05-22 00:28:50 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5b275811] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:28:50 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:28:50 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@11e355ca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:28:50 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 00:28:50 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 00:28:50 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:28:50 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:28:50 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 00:28:50 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 00:28:50 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d2291de
2020-05-22 00:28:50 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: f7585e2a-4ee1-4173-8a20-91e3e0ae2781 (<unnamed>)
2020-05-22 00:28:50 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 00:28:50 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 00:28:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:28:50 DEBUG TransactionImpl:81 - begin
2020-05-22 00:28:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:28:50 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:28:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:28:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:28:50 INFO  MovieDaoImpl:27 - New movie Lord of the rings 1 has been added to the database
2020-05-22 00:28:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:28:50 DEBUG TransactionImpl:81 - begin
2020-05-22 00:28:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:28:50 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:28:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:28:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:28:50 INFO  MovieDaoImpl:27 - New movie Matrix 2 has been added to the database
2020-05-22 00:28:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:28:50 DEBUG TransactionImpl:81 - begin
2020-05-22 00:28:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:28:50 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:28:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 00:28:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:28:50 INFO  MovieDaoImpl:27 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 00:28:50 INFO  MovieDaoImpl:44 - All movies retrieved from the database
2020-05-22 00:28:50 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 00:28:50 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@250a9031
2020-05-22 00:28:50 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:28:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:28:50 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:28:50 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:28:50 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 00:28:50 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 00:28:50 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:28:50 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 00:28:50 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:28:50 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 00:28:50 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:28:50 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 00:28:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:28:50 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:28:50 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:28:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:28:50 DEBUG SQL:128 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:28:50 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:28:50 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 00:28:50 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:28:50 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 00:28:50 DEBUG Loader:384 - Result set row: 2
2020-05-22 00:28:50 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:28:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 00:28:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:28:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:28:50 DEBUG TransactionImpl:81 - begin
2020-05-22 00:28:50 DEBUG TransactionImpl:139 - rolling back
2020-05-22 00:37:02 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 00:37:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 00:37:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 00:37:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 00:37:02 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 00:37:02 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 00:37:02 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 00:37:02 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 00:37:02 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 00:37:02 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 00:37:03 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 00:37:03 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 00:37:03 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 00:37:03 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 00:37:03 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 00:37:03 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b94089b
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a5ecce3
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2dcd168a
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1941a8ff
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1156a7
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@71529963
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71529963
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3212a8d7
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eda25e5
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6179e425
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@604c5de8
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1d3ac898
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@30b19518
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6ee660fb
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4372b9b6
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54dcfa5a
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3243b914
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dc8caa7
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1338fb5
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31000e60
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d470d0
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24d09c1
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54c62d71
2020-05-22 00:37:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65045a87
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:37:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 00:37:03 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 00:37:03 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 00:37:03 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 00:37:03 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 00:37:03 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 00:37:03 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 00:37:04 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 00:37:04 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 00:37:04 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 00:37:05 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 00:37:05 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 00:37:05 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 00:37:05 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 00:37:05 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74fef3f7]
2020-05-22 00:37:05 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 00:37:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:37:05 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 00:37:05 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 00:37:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:37:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:37:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 00:37:05 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:37:05 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:37:05 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:37:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:37:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:37:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 00:37:05 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:37:05 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:37:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 00:37:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 00:37:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 00:37:05 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 00:37:05 DEBUG PropertyBinder:266 - Building property title
2020-05-22 00:37:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:37:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:37:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 00:37:05 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 00:37:05 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 00:37:05 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 00:37:05 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 00:37:05 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 00:37:05 DEBUG Settings:72 - Statistics: disabled
2020-05-22 00:37:05 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 00:37:05 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 00:37:05 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 00:37:05 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 00:37:05 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 00:37:05 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 00:37:05 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 00:37:05 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 00:37:05 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 00:37:05 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 00:37:05 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 00:37:05 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 00:37:05 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 00:37:05 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 00:37:05 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 00:37:05 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 00:37:05 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 00:37:05 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 00:37:05 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 00:37:05 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 00:37:05 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 00:37:05 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 00:37:05 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 00:37:05 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 00:37:05 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 00:37:05 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 00:37:05 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 00:37:05 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 00:37:05 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 00:37:05 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 00:37:05 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 00:37:05 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 00:37:05 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 00:37:05 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 00:37:05 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 00:37:05 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3fbfbf84, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 00:37:05 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 00:37:05 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 00:37:05 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1046498a]
2020-05-22 00:37:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:37:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:37:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:37:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:37:06 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 00:37:06 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 00:37:06 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-05-22 00:37:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 00:37:06 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 00:37:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 00:37:06 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 00:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@80bfa9d]
2020-05-22 00:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:37:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:37:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:37:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:37:06 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1d8e1a]
2020-05-22 00:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:37:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:37:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:37:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:37:06 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:37:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:37:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:37:06 DEBUG SQL:128 - drop table if exists movie
2020-05-22 00:37:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5b275811] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:37:06 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:37:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@11e355ca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:37:06 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 00:37:06 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 00:37:06 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:37:06 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:37:06 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 00:37:06 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 00:37:06 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d2291de
2020-05-22 00:37:06 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 9eebe64d-dd21-4b6c-9eab-6142744cfa3e (<unnamed>)
2020-05-22 00:37:06 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 00:37:06 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 00:37:06 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:37:06 DEBUG TransactionImpl:81 - begin
2020-05-22 00:37:06 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:37:06 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:37:06 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:37:06 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:37:06 INFO  MovieDaoImpl:27 - New movie Lord of the rings 1 has been added to the database
2020-05-22 00:37:06 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:37:06 DEBUG TransactionImpl:81 - begin
2020-05-22 00:37:06 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:37:06 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:37:06 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:37:06 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:37:06 INFO  MovieDaoImpl:27 - New movie Matrix 2 has been added to the database
2020-05-22 00:37:06 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:37:06 DEBUG TransactionImpl:81 - begin
2020-05-22 00:37:06 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:37:06 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:37:06 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 00:37:06 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:37:06 INFO  MovieDaoImpl:27 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 00:37:06 INFO  MovieDaoImpl:44 - All movies retrieved from the database
2020-05-22 00:37:06 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 00:37:06 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@250a9031
2020-05-22 00:37:06 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:37:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:37:06 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:37:06 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:37:06 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 00:37:06 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 00:37:06 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:37:06 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 00:37:06 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:37:06 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 00:37:06 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:37:06 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 00:37:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:37:06 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:37:06 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:37:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:37:06 DEBUG SQL:128 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:37:06 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:37:06 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 00:37:06 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:37:06 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 00:37:06 DEBUG Loader:384 - Result set row: 2
2020-05-22 00:37:06 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:37:06 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 00:37:06 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:37:06 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:37:06 DEBUG TransactionImpl:81 - begin
2020-05-22 00:37:06 DEBUG TransactionImpl:139 - rolling back
2020-05-22 00:37:06 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:37:06 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:39:35 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 00:39:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 00:39:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 00:39:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 00:39:35 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 00:39:35 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 00:39:35 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 00:39:35 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 00:39:35 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 00:39:35 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 00:39:36 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 00:39:36 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 00:39:36 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 00:39:36 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 00:39:36 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 00:39:36 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b94089b
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a5ecce3
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2dcd168a
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1941a8ff
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1156a7
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@71529963
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71529963
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3212a8d7
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eda25e5
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6179e425
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@604c5de8
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1d3ac898
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@30b19518
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6ee660fb
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4372b9b6
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54dcfa5a
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3243b914
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dc8caa7
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1338fb5
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31000e60
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d470d0
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24d09c1
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54c62d71
2020-05-22 00:39:36 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65045a87
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:39:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 00:39:36 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 00:39:36 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 00:39:36 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 00:39:36 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 00:39:36 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 00:39:36 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 00:39:37 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 00:39:37 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 00:39:37 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 00:39:37 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 00:39:37 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 00:39:37 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 00:39:37 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 00:39:37 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74fef3f7]
2020-05-22 00:39:38 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 00:39:38 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:39:38 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 00:39:38 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 00:39:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:39:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:39:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 00:39:38 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:39:38 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:39:38 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:39:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:39:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:39:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 00:39:38 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:39:38 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:39:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 00:39:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 00:39:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 00:39:38 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 00:39:38 DEBUG PropertyBinder:266 - Building property title
2020-05-22 00:39:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:39:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:39:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 00:39:38 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 00:39:38 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 00:39:38 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 00:39:38 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 00:39:38 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 00:39:38 DEBUG Settings:72 - Statistics: disabled
2020-05-22 00:39:38 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 00:39:38 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 00:39:38 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 00:39:38 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 00:39:38 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 00:39:38 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 00:39:38 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 00:39:38 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 00:39:38 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 00:39:38 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 00:39:38 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 00:39:38 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 00:39:38 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 00:39:38 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 00:39:38 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 00:39:38 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 00:39:38 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 00:39:38 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 00:39:38 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 00:39:38 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 00:39:38 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 00:39:38 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 00:39:38 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 00:39:38 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 00:39:38 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 00:39:38 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 00:39:38 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 00:39:38 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 00:39:38 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 00:39:38 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 00:39:38 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 00:39:38 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 00:39:38 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 00:39:38 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 00:39:38 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 00:39:38 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3fbfbf84, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 00:39:38 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 00:39:38 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 00:39:38 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1046498a]
2020-05-22 00:39:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:39:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:39:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:39:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:39:38 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 00:39:38 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 00:39:38 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-05-22 00:39:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 00:39:38 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 00:39:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 00:39:38 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 00:39:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@80bfa9d]
2020-05-22 00:39:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:39:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:39:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:39:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:39:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:39:39 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:39:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1d8e1a]
2020-05-22 00:39:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:39:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:39:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:39:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:39:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:39:39 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:39:39 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:39:39 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:39:39 DEBUG SQL:128 - drop table if exists movie
2020-05-22 00:39:39 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5b275811] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:39:39 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:39:39 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@11e355ca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:39:39 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 00:39:39 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 00:39:39 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:39:39 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:39:39 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 00:39:39 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 00:39:39 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d2291de
2020-05-22 00:39:39 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: f8c354e3-8deb-4933-a8d4-b72e2ae4c852 (<unnamed>)
2020-05-22 00:39:39 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 00:39:39 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 00:39:39 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:39:39 DEBUG TransactionImpl:81 - begin
2020-05-22 00:39:39 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:39:39 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:39:39 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:39:39 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:39:39 INFO  MovieDaoImpl:26 - New movie Lord of the rings 1 has been added to the database
2020-05-22 00:39:39 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:39:39 DEBUG TransactionImpl:81 - begin
2020-05-22 00:39:39 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:39:39 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:39:39 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:39:39 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:39:39 INFO  MovieDaoImpl:26 - New movie Matrix 2 has been added to the database
2020-05-22 00:39:39 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:39:39 DEBUG TransactionImpl:81 - begin
2020-05-22 00:39:39 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:39:39 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:39:39 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 00:39:39 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:39:39 INFO  MovieDaoImpl:26 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 00:39:39 INFO  MovieDaoImpl:43 - All movies retrieved from the database
2020-05-22 00:39:39 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 00:39:39 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@250a9031
2020-05-22 00:39:39 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:39:39 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:39:39 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:39:39 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:39:39 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 00:39:39 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 00:39:39 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:39:39 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 00:39:39 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:39:39 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 00:39:39 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:39:39 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 00:39:39 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:39:39 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:39:39 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:39:39 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:39:39 DEBUG SQL:128 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:39:39 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:39:39 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 00:39:39 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:39:39 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 00:39:39 DEBUG Loader:384 - Result set row: 2
2020-05-22 00:39:39 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:39:39 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 00:39:39 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:39:39 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:39:39 DEBUG TransactionImpl:81 - begin
2020-05-22 00:39:39 DEBUG TransactionImpl:139 - rolling back
2020-05-22 00:39:39 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:39:39 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:41:35 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 00:41:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 00:41:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 00:41:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 00:41:35 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 00:41:35 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 00:41:36 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 00:41:36 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 00:41:36 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 00:41:36 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 00:41:36 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 00:41:36 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 00:41:36 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 00:41:36 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 00:41:36 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 00:41:36 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b94089b
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a5ecce3
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2dcd168a
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1941a8ff
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1156a7
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@71529963
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71529963
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3212a8d7
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eda25e5
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6179e425
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@604c5de8
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1d3ac898
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@30b19518
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6ee660fb
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4372b9b6
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54dcfa5a
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3243b914
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dc8caa7
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1338fb5
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31000e60
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d470d0
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24d09c1
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54c62d71
2020-05-22 00:41:37 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65045a87
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:41:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 00:41:37 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 00:41:37 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 00:41:37 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 00:41:37 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 00:41:37 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 00:41:37 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 00:41:38 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 00:41:38 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 00:41:38 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 00:41:38 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 00:41:38 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 00:41:38 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 00:41:38 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 00:41:38 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74fef3f7]
2020-05-22 00:41:38 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 00:41:38 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:41:38 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 00:41:38 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 00:41:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:41:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:41:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 00:41:38 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:41:38 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:41:38 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:41:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:41:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:41:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 00:41:38 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:41:38 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:41:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 00:41:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 00:41:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 00:41:38 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 00:41:38 DEBUG PropertyBinder:266 - Building property title
2020-05-22 00:41:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:41:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:41:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 00:41:38 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 00:41:38 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 00:41:38 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 00:41:38 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 00:41:38 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 00:41:38 DEBUG Settings:72 - Statistics: disabled
2020-05-22 00:41:38 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 00:41:38 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 00:41:38 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 00:41:38 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 00:41:38 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 00:41:38 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 00:41:38 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 00:41:38 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 00:41:38 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 00:41:38 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 00:41:38 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 00:41:38 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 00:41:38 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 00:41:38 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 00:41:38 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 00:41:38 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 00:41:38 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 00:41:38 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 00:41:38 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 00:41:38 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 00:41:38 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 00:41:38 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 00:41:38 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 00:41:38 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 00:41:38 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 00:41:38 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 00:41:38 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 00:41:38 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 00:41:38 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 00:41:38 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 00:41:38 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 00:41:38 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 00:41:38 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 00:41:38 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 00:41:38 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 00:41:38 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3fbfbf84, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 00:41:39 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 00:41:39 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 00:41:39 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1046498a]
2020-05-22 00:41:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:41:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:41:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:41:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:41:39 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 00:41:39 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 00:41:39 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-05-22 00:41:39 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 00:41:39 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 00:41:39 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 00:41:39 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 00:41:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@80bfa9d]
2020-05-22 00:41:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:41:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:41:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:41:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:41:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:41:39 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:41:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1d8e1a]
2020-05-22 00:41:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:41:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:41:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:41:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:41:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:41:39 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:41:39 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:41:39 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:41:39 DEBUG SQL:128 - drop table if exists movie
2020-05-22 00:41:39 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5b275811] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:41:39 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:41:39 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@11e355ca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:41:39 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 00:41:39 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 00:41:39 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:41:39 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:41:39 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 00:41:39 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 00:41:39 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d2291de
2020-05-22 00:41:39 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: a3a6e2ef-198e-4a7b-b7b2-8482f6833d29 (<unnamed>)
2020-05-22 00:41:39 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 00:41:39 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 00:41:39 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:41:39 DEBUG TransactionImpl:81 - begin
2020-05-22 00:41:39 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:41:39 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:41:39 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:41:39 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:41:39 DEBUG TransactionImpl:98 - committing
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:41:39 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:41:39 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 00:41:39 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:41:39 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:41:39 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 00:41:39 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:41:39 DEBUG TransactionImpl:81 - begin
2020-05-22 00:41:39 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:41:39 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:41:39 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:41:39 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:41:39 DEBUG TransactionImpl:98 - committing
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:41:39 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:41:39 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 00:41:39 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:41:39 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:41:39 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 00:41:39 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:41:39 DEBUG TransactionImpl:81 - begin
2020-05-22 00:41:39 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:41:39 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:41:39 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 00:41:39 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:41:39 DEBUG TransactionImpl:98 - committing
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:41:39 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:41:39 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:41:39 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 00:41:39 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:41:39 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:41:39 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 00:41:39 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 00:41:39 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 00:41:39 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@92d1782
2020-05-22 00:41:39 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:41:39 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:41:39 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:41:40 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:41:40 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 00:41:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 00:41:40 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:41:40 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 00:41:40 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:41:40 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 00:41:40 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:41:40 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 00:41:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:41:40 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:41:40 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:41:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:41:40 DEBUG SQL:128 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:41:40 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:41:40 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 00:41:40 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:41:40 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 00:41:40 DEBUG Loader:384 - Result set row: 2
2020-05-22 00:41:40 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:41:40 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 00:41:40 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:41:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:41:40 DEBUG TransactionImpl:81 - begin
2020-05-22 00:41:40 DEBUG TransactionImpl:139 - rolling back
2020-05-22 00:41:40 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:41:40 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:50:00 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 00:50:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 00:50:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 00:50:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 00:50:00 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 00:50:00 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 00:50:00 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 00:50:00 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 00:50:00 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 00:50:01 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 00:50:01 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 00:50:01 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 00:50:01 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 00:50:01 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 00:50:01 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 00:50:01 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b94089b
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a5ecce3
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2dcd168a
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1941a8ff
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1156a7
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@71529963
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71529963
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3212a8d7
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:50:01 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eda25e5
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6179e425
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@604c5de8
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1d3ac898
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@30b19518
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6ee660fb
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4372b9b6
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54dcfa5a
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3243b914
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dc8caa7
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1338fb5
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31000e60
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d470d0
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24d09c1
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54c62d71
2020-05-22 00:50:02 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65045a87
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:50:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 00:50:02 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 00:50:02 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 00:50:02 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 00:50:02 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 00:50:02 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 00:50:02 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 00:50:03 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 00:50:03 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 00:50:03 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 00:50:03 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 00:50:03 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 00:50:03 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 00:50:03 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 00:50:03 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74fef3f7]
2020-05-22 00:50:03 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 00:50:03 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:50:03 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 00:50:03 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 00:50:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:50:03 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:50:03 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 00:50:03 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:50:03 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:50:03 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:50:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:50:03 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:50:03 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 00:50:03 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:50:03 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:50:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 00:50:03 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 00:50:03 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 00:50:03 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 00:50:03 DEBUG PropertyBinder:266 - Building property title
2020-05-22 00:50:03 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:50:03 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:50:03 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 00:50:03 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 00:50:03 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 00:50:03 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 00:50:03 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 00:50:03 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 00:50:03 DEBUG Settings:72 - Statistics: disabled
2020-05-22 00:50:03 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 00:50:03 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 00:50:03 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 00:50:03 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 00:50:03 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 00:50:03 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 00:50:03 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 00:50:03 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 00:50:03 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 00:50:03 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 00:50:03 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 00:50:03 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 00:50:03 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 00:50:03 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 00:50:03 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 00:50:03 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 00:50:03 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 00:50:03 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 00:50:03 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 00:50:03 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 00:50:03 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 00:50:03 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 00:50:03 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 00:50:03 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 00:50:03 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 00:50:03 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 00:50:03 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 00:50:03 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 00:50:03 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 00:50:03 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 00:50:03 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 00:50:03 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 00:50:03 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 00:50:03 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 00:50:04 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 00:50:04 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3fbfbf84, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 00:50:04 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 00:50:04 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 00:50:04 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1046498a]
2020-05-22 00:50:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:50:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:50:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:50:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:50:04 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 00:50:04 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 00:50:04 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-05-22 00:50:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 00:50:04 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 00:50:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 00:50:04 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 00:50:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@80bfa9d]
2020-05-22 00:50:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:50:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:50:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:50:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:50:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:50:04 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:50:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1d8e1a]
2020-05-22 00:50:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:50:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:50:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:50:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:50:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:50:04 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:50:04 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:50:04 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:50:04 DEBUG SQL:128 - drop table if exists movie
2020-05-22 00:50:04 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5b275811] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:50:04 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:50:04 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@11e355ca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:50:04 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 00:50:04 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 00:50:04 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:50:04 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:50:04 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 00:50:04 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 00:50:04 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d2291de
2020-05-22 00:50:04 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 149d8403-6865-47fd-9276-2ae6f80d1b50 (<unnamed>)
2020-05-22 00:50:04 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 00:50:04 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 00:50:04 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:50:04 DEBUG TransactionImpl:81 - begin
2020-05-22 00:50:04 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:50:04 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:50:04 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:50:04 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:50:04 DEBUG TransactionImpl:98 - committing
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:50:04 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:50:04 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 00:50:04 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:50:04 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:50:04 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 00:50:04 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:50:04 DEBUG TransactionImpl:81 - begin
2020-05-22 00:50:04 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:50:04 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:50:04 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:50:04 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:50:04 DEBUG TransactionImpl:98 - committing
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:50:04 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:50:04 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 00:50:04 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:50:04 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:50:04 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 00:50:04 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:50:04 DEBUG TransactionImpl:81 - begin
2020-05-22 00:50:04 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:50:04 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:50:04 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 00:50:04 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:50:04 DEBUG TransactionImpl:98 - committing
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:50:04 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:50:04 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:50:04 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 00:50:04 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:50:04 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:50:04 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 00:50:04 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 00:50:04 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 00:50:04 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@92d1782
2020-05-22 00:50:04 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:50:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:50:05 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:50:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:50:05 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 00:50:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 00:50:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:50:05 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 00:50:05 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:50:05 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 00:50:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:50:05 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 00:50:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:50:05 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:50:05 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:50:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:50:05 DEBUG SQL:128 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:50:05 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:50:05 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 00:50:05 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:50:05 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 00:50:05 DEBUG Loader:384 - Result set row: 2
2020-05-22 00:50:05 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:50:05 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 00:50:05 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:50:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:50:05 DEBUG TransactionImpl:81 - begin
2020-05-22 00:50:05 DEBUG TransactionImpl:139 - rolling back
2020-05-22 00:50:05 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:50:05 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:51:19 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 00:51:19 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 00:51:19 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 00:51:19 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 00:51:19 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 00:51:19 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 00:51:20 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 00:51:20 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 00:51:20 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 00:51:20 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 00:51:20 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 00:51:21 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 00:51:21 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 00:51:21 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 00:51:21 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 00:51:21 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b11a194
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b11a194
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b11a194
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4721d212
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4bff1903
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@56c9bbd8
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@5b057c8c
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@5b057c8c
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b057c8c
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@1e1d3956
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@1e1d3956
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e1d3956
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@73db4768
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@73db4768
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73db4768
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@7a8fa663
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@7a8fa663
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a8fa663
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@485a3466
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@485a3466
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@485a3466
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@c260bdc
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@c260bdc
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c260bdc
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4baf352a
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@4baf352a
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4baf352a
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2dbe250d
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2dbe250d
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@56ace400
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@56ace400
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@339bf286
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@339bf286
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3234f74e
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@557a1e2d
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@4b3c354a
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4b3c354a
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@54227100
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@54227100
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@1bc715b8
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1bc715b8
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63192798
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63192798
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5ef0d29e
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5ef0d29e
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2c3dec30
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2c3dec30
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6731787b
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6731787b
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4ba534b0
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4ba534b0
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c7d121c
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c7d121c
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@58670130
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@58670130
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@18518ccf
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18518ccf
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1c9f0a20
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1c9f0a20
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1c9f0a20
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1992eaf4
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@7383eae2
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7383eae2
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7383eae2
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@72a85671
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5049d8b2
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1643d68f
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1643d68f
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@acb0951
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@acb0951
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@675d8c96
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@675d8c96
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@3185fa6b
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3185fa6b
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@bcec031
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@bcec031
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29ef6856
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@eb6449b
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@eb6449b
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@eb6449b
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@319988b0
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@319988b0
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@319988b0
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@423e4cbb
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@1536602f
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@743cb8e0
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@743cb8e0
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@743cb8e0
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@52b56a3e
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@52b56a3e
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@52b56a3e
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@4fad94a7
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@716a7124
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@55795845
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@55795845
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5b970f7
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@2cf92cc7
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cf92cc7
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3d8bbcdc
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3d8bbcdc
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@78aea4b9
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4215838f
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@4a9f80d3
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@4204541c
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4204541c
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e2822
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79e18e38
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@29a60c27
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1849db1a
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69c79f09
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ca25c47
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5fcacc0
2020-05-22 00:51:21 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@533b266e
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:51:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 00:51:21 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 00:51:21 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 00:51:21 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 00:51:21 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 00:51:21 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 00:51:21 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 00:51:22 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 00:51:22 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 00:51:22 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 00:51:22 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 00:51:22 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 00:51:23 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 00:51:23 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 00:51:23 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10fbbdb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@23f3dbf0]
2020-05-22 00:51:23 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 00:51:23 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:51:23 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 00:51:23 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 00:51:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:51:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:51:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 00:51:23 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:51:23 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:51:23 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:51:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:51:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:51:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 00:51:23 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:51:23 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:51:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 00:51:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 00:51:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 00:51:23 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 00:51:23 DEBUG PropertyBinder:266 - Building property title
2020-05-22 00:51:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:51:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:51:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 00:51:23 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 00:51:23 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 00:51:23 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 00:51:23 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 00:51:23 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 00:51:23 DEBUG Settings:72 - Statistics: disabled
2020-05-22 00:51:23 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 00:51:23 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 00:51:23 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 00:51:23 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 00:51:23 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 00:51:23 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 00:51:23 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 00:51:23 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 00:51:23 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 00:51:23 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 00:51:23 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 00:51:23 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 00:51:23 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 00:51:23 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 00:51:23 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 00:51:23 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 00:51:23 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 00:51:23 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 00:51:23 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 00:51:23 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 00:51:23 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 00:51:23 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 00:51:23 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 00:51:23 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 00:51:23 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 00:51:23 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 00:51:23 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 00:51:23 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 00:51:23 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 00:51:23 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 00:51:23 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 00:51:23 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 00:51:23 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 00:51:23 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 00:51:23 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 00:51:23 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5981f4a6, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 00:51:23 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 00:51:23 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 00:51:23 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10fbbdb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@534e58b6]
2020-05-22 00:51:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:51:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:51:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:51:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:51:24 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 00:51:24 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 00:51:24 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-05-22 00:51:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 00:51:24 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 00:51:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 00:51:24 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 00:51:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@307e4c44]
2020-05-22 00:51:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:51:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:51:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:51:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:51:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:51:24 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:51:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d7fd41]
2020-05-22 00:51:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:51:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:51:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:51:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:51:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:51:24 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:51:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:51:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:51:24 DEBUG SQL:128 - drop table if exists movie
2020-05-22 00:51:24 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@315c081] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:51:24 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:51:24 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@68b7d0ef] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:51:24 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 00:51:24 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 00:51:24 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:51:24 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:51:24 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 00:51:24 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 00:51:24 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@50b46e24
2020-05-22 00:51:24 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 83748d63-4f74-47f2-adb9-5af8f5175709 (<unnamed>)
2020-05-22 00:51:24 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 00:51:24 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 00:51:24 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:51:24 DEBUG TransactionImpl:81 - begin
2020-05-22 00:51:24 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:51:24 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:51:24 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:51:24 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:51:24 DEBUG TransactionImpl:98 - committing
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:51:24 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:51:24 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 00:51:24 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:51:24 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:51:24 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 00:51:24 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:51:24 DEBUG TransactionImpl:81 - begin
2020-05-22 00:51:24 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:51:24 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:51:24 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:51:24 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:51:24 DEBUG TransactionImpl:98 - committing
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:51:24 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:51:24 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 00:51:24 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:51:24 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:51:24 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 00:51:24 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:51:24 DEBUG TransactionImpl:81 - begin
2020-05-22 00:51:24 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:51:24 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:51:24 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 00:51:24 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:51:24 DEBUG TransactionImpl:98 - committing
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:51:24 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:51:24 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:51:24 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 00:51:24 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:51:24 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:51:24 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 00:51:24 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 00:51:24 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 00:51:24 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5eed6dfb
2020-05-22 00:51:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:51:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:51:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:51:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:51:25 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 00:51:25 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 00:51:25 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:51:25 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 00:51:25 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:51:25 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 00:51:25 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:51:25 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 00:51:25 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:51:25 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:51:25 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:51:25 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:51:25 DEBUG SQL:128 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-05-22 00:51:25 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:51:25 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 00:51:25 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:51:25 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 00:51:25 DEBUG Loader:384 - Result set row: 2
2020-05-22 00:51:25 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:51:25 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 00:51:25 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:51:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:51:37 DEBUG TransactionImpl:81 - begin
2020-05-22 00:57:42 DEBUG TransactionImpl:139 - rolling back
2020-05-22 00:57:42 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:42 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:46 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 00:57:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 00:57:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 00:57:46 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 00:57:46 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 00:57:46 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 00:57:47 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 00:57:47 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 00:57:47 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 00:57:47 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 00:57:47 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 00:57:47 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 00:57:47 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 00:57:47 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 00:57:47 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 00:57:47 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b94089b
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a5ecce3
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2dcd168a
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1941a8ff
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1156a7
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@71529963
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71529963
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3212a8d7
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eda25e5
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6179e425
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@604c5de8
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1d3ac898
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@30b19518
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6ee660fb
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4372b9b6
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54dcfa5a
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3243b914
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dc8caa7
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1338fb5
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31000e60
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d470d0
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24d09c1
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54c62d71
2020-05-22 00:57:48 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65045a87
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:57:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 00:57:48 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 00:57:48 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 00:57:48 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 00:57:48 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 00:57:48 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 00:57:48 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 00:57:49 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 00:57:49 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 00:57:49 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 00:57:49 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 00:57:49 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 00:57:49 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 00:57:49 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 00:57:49 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74fef3f7]
2020-05-22 00:57:49 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 00:57:49 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:57:49 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 00:57:49 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 00:57:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:57:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:57:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 00:57:49 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:57:49 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:57:49 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:57:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:57:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:57:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 00:57:49 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:57:49 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:57:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 00:57:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 00:57:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 00:57:49 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 00:57:49 DEBUG PropertyBinder:266 - Building property title
2020-05-22 00:57:49 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.CinemaHall
2020-05-22 00:57:49 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:57:49 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-22 00:57:49 DEBUG EntityBinder:873 - Bind entity cinema.model.CinemaHall on table cinema_hall
2020-05-22 00:57:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:57:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:57:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:id]
2020-05-22 00:57:49 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:57:49 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:57:49 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:57:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-22 00:57:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-22 00:57:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:capacity]
2020-05-22 00:57:49 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-22 00:57:49 DEBUG PropertyBinder:266 - Building property capacity
2020-05-22 00:57:49 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:57:49 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:57:49 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:description]
2020-05-22 00:57:49 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:57:50 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:57:50 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.MovieSession
2020-05-22 00:57:50 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:57:50 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-22 00:57:50 DEBUG EntityBinder:873 - Bind entity cinema.model.MovieSession on table movie_session
2020-05-22 00:57:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:57:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:57:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:id]
2020-05-22 00:57:50 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:57:50 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:57:50 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:57:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 00:57:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-22 00:57:50 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-22 00:57:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 00:57:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-22 00:57:50 DEBUG PropertyBinder:266 - Building property movie
2020-05-22 00:57:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movieTime, insertable=true, updatable=true, unique=false}
2020-05-22 00:57:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property movieTime with lazy=false
2020-05-22 00:57:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:movieTime]
2020-05-22 00:57:50 DEBUG SimpleValueBinder:411 - building SimpleValue for movieTime
2020-05-22 00:57:50 DEBUG PropertyBinder:266 - Building property movieTime
2020-05-22 00:57:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:57:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:57:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 00:57:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:57:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-22 00:57:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:57:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:57:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for movieTime
2020-05-22 00:57:50 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 00:57:50 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-22 00:57:50 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-22 00:57:50 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 00:57:50 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 00:57:50 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 00:57:50 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 00:57:50 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 00:57:50 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 00:57:50 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 00:57:50 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 00:57:50 DEBUG Settings:72 - Statistics: disabled
2020-05-22 00:57:50 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 00:57:50 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 00:57:50 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 00:57:50 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 00:57:50 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 00:57:50 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 00:57:50 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 00:57:50 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 00:57:50 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 00:57:50 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 00:57:50 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 00:57:50 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 00:57:50 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 00:57:50 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 00:57:50 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 00:57:50 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 00:57:50 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 00:57:50 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 00:57:50 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 00:57:50 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 00:57:50 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 00:57:50 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 00:57:50 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 00:57:50 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 00:57:50 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 00:57:50 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 00:57:50 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 00:57:50 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 00:57:50 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 00:57:50 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 00:57:50 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 00:57:50 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 00:57:50 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 00:57:50 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 00:57:50 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 00:57:50 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@53dad875, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 00:57:50 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 00:57:50 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 00:57:50 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6107165]
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:57:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.CinemaHall
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3860 -  Version select: select id from cinema_hall where id =?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 00:57:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65ddee5a]
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:57:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:57:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:57:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:57:50 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 00:57:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29fa6b65]
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:57:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:57:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:57:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:57:50 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 00:57:50 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 00:57:50 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.MovieSession
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie_session where id =?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaha3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.movieTime as movietim2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, movieTime, id) values (?, ?, ?, ?)
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, movieTime=? where id=?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, movieTime) values (?, ?, ?)
2020-05-22 00:57:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c281ed]
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 00:57:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12a14b74]
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 00:57:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c1cfa53]
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movieTime
2020-05-22 00:57:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:57:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:57:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 00:57:50 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.movieTime as movietim2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 00:57:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6232ffdb]
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 00:57:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d28f02]
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 00:57:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6056232d]
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movieTime
2020-05-22 00:57:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:57:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:57:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 00:57:50 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.movieTime as movietim2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 00:57:50 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.movieTime as movietim2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 00:57:50 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.movieTime as movietim2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 00:57:50 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 00:57:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107bfcb2]
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:57:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:57:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:57:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 00:57:50 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:57:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab26378]
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:57:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:57:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:57:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:57:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 00:57:50 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:57:50 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:57:50 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:57:50 DEBUG SQL:128 - alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr
2020-05-22 00:57:50 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3f36e8d1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:57:50 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at cinema.until.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at cinema.until.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:333)
	at cinema.library.Injector.findClasses(Injector.java:167)
	at cinema.library.Injector.findClasses(Injector.java:164)
	at cinema.library.Injector.getClasses(Injector.java:138)
	at cinema.library.Injector.<init>(Injector.java:21)
	at cinema.library.Injector.getInstance(Injector.java:31)
	at cinema.Main.<clinit>(Main.java:10)
Caused by: java.sql.SQLSyntaxErrorException: Table 'cinema.movie_session' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 23 more
2020-05-22 00:57:50 DEBUG SQL:128 - alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39
2020-05-22 00:57:50 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at cinema.until.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at cinema.until.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:333)
	at cinema.library.Injector.findClasses(Injector.java:167)
	at cinema.library.Injector.findClasses(Injector.java:164)
	at cinema.library.Injector.getClasses(Injector.java:138)
	at cinema.library.Injector.<init>(Injector.java:21)
	at cinema.library.Injector.getInstance(Injector.java:31)
	at cinema.Main.<clinit>(Main.java:10)
Caused by: java.sql.SQLSyntaxErrorException: Table 'cinema.movie_session' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 23 more
2020-05-22 00:57:50 DEBUG SQL:128 - drop table if exists cinema_hall
2020-05-22 00:57:50 DEBUG SQL:128 - drop table if exists movie
2020-05-22 00:57:50 DEBUG SQL:128 - drop table if exists movie_session
2020-05-22 00:57:51 DEBUG SQL:128 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:57:51 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@62b93086] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:57:51 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:57:51 DEBUG SQL:128 - create table movie_session (id bigint not null auto_increment, movieTime datetime(6), cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=InnoDB
2020-05-22 00:57:51 DEBUG SQL:128 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-22 00:57:51 DEBUG SQL:128 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-22 00:57:51 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 00:57:51 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 00:57:51 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:57:51 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:57:51 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 00:57:51 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 00:57:51 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2e26173
2020-05-22 00:57:51 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: c7e309e7-7784-4df5-b69c-b0711af18a3a (<unnamed>)
2020-05-22 00:57:51 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 00:57:51 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 00:57:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:57:51 DEBUG TransactionImpl:81 - begin
2020-05-22 00:57:51 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:57:51 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:57:51 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:57:51 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:57:51 DEBUG TransactionImpl:98 - committing
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:57:51 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:57:51 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:51 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 00:57:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:57:51 DEBUG TransactionImpl:81 - begin
2020-05-22 00:57:51 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:57:51 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:57:51 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:57:51 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:57:51 DEBUG TransactionImpl:98 - committing
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:57:51 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:57:51 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:51 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 00:57:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:57:51 DEBUG TransactionImpl:81 - begin
2020-05-22 00:57:51 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:57:51 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:57:51 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 00:57:51 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:57:51 DEBUG TransactionImpl:98 - committing
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:57:51 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:57:51 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:51 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 00:57:51 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 00:57:51 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 00:57:51 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@38d08cb5
2020-05-22 00:57:51 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:57:51 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:57:51 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:57:51 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:57:51 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 00:57:51 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 00:57:51 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:57:51 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 00:57:51 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:57:51 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 00:57:51 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:57:51 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 00:57:51 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:57:51 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:57:51 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 00:57:51 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:57:51 DEBUG SQL:128 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 00:57:51 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:57:51 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 00:57:51 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:57:51 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 00:57:51 DEBUG Loader:384 - Result set row: 2
2020-05-22 00:57:51 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:57:51 DEBUG TransactionImpl:81 - begin
2020-05-22 00:57:51 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:57:51 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 00:57:51 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:57:51 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:57:51 DEBUG TransactionImpl:98 - committing
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:57:51 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:57:51 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Big hall, id=1, capacity=100}
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:51 INFO  CinemaHallDaoImpl:29 - New cinema hall 1 has been added to the database
2020-05-22 00:57:51 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:57:51 DEBUG TransactionImpl:81 - begin
2020-05-22 00:57:51 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:57:51 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 00:57:51 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:57:51 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:57:51 DEBUG TransactionImpl:98 - committing
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:57:51 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:57:51 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:57:51 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Small cozy hall, id=2, capacity=40}
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:57:51 INFO  CinemaHallDaoImpl:29 - New cinema hall 2 has been added to the database
2020-05-22 00:57:51 INFO  CinemaHallDaoImpl:50 - All cinema halls retrieved from the database
2020-05-22 00:57:51 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-22 00:57:51 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 00:57:51 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:57:51 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:57:51 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:57:51 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-22 00:57:51 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-22 00:57:51 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:57:51 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-22 00:57:51 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.CinemaHall)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:57:51 DEBUG JoinProcessor:296 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-22 00:57:51 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:57:51 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=cinema.model.CinemaHall}}

2020-05-22 00:57:51 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:57:51 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 00:57:51 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 00:57:51 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:57:51 DEBUG SQL:128 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 00:57:51 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:57:51 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#1]
2020-05-22 00:57:51 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:57:51 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#2]
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:57:51 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 00:57:51 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:28 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 00:58:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 00:58:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 00:58:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 00:58:29 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 00:58:29 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 00:58:29 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 00:58:29 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 00:58:29 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 00:58:29 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 00:58:30 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 00:58:30 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 00:58:30 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 00:58:30 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 00:58:30 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 00:58:30 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1fde5d22
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b94089b
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a5ecce3
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2dcd168a
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@460ebd80
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7776ab
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79517588
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@503ecb24
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e7dd664
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fb365ed
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78383390
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d1ef78d
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@421bba99
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fad9bb2
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1941a8ff
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1156a7
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@71529963
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71529963
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70f59913
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6187d1f5
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63798ca7
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43f82e78
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@530712d
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@45fd9a4d
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@16c63f5
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74eb909f
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@130dca52
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@736caf7a
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76012793
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3212a8d7
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25bfcafd
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@eda25e5
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6179e425
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c32386d
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53bd8fca
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1199fe66
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cd1d761
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@906d29b
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@604c5de8
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@5d8bafa9
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55dfebeb
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@1d3ac898
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@30b19518
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@44b3606b
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b202a3a
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@6ee660fb
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4372b9b6
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@447a020
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54dcfa5a
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340b9973
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ccbeb64
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3243b914
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dc8caa7
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@1338fb5
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6722d3
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3700ec9c
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2002348
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5911e990
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31000e60
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d470d0
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24d09c1
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54c62d71
2020-05-22 00:58:30 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65045a87
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 00:58:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 00:58:30 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 00:58:30 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 00:58:30 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 00:58:30 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 00:58:30 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 00:58:30 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 00:58:31 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 00:58:31 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 00:58:31 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 00:58:31 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 00:58:31 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 00:58:31 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 00:58:32 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 00:58:32 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74fef3f7]
2020-05-22 00:58:32 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:58:32 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 00:58:32 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:58:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:58:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 00:58:32 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:58:32 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:58:32 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:58:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:58:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 00:58:32 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:58:32 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 00:58:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 00:58:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 00:58:32 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 00:58:32 DEBUG PropertyBinder:266 - Building property title
2020-05-22 00:58:32 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.CinemaHall
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:58:32 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-22 00:58:32 DEBUG EntityBinder:873 - Bind entity cinema.model.CinemaHall on table cinema_hall
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:58:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:58:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:id]
2020-05-22 00:58:32 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:58:32 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:58:32 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-22 00:58:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-22 00:58:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:capacity]
2020-05-22 00:58:32 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-22 00:58:32 DEBUG PropertyBinder:266 - Building property capacity
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 00:58:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 00:58:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:description]
2020-05-22 00:58:32 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 00:58:32 DEBUG PropertyBinder:266 - Building property description
2020-05-22 00:58:32 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.MovieSession
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 00:58:32 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-22 00:58:32 DEBUG EntityBinder:873 - Bind entity cinema.model.MovieSession on table movie_session
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 00:58:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 00:58:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:id]
2020-05-22 00:58:32 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 00:58:32 DEBUG PropertyBinder:266 - Building property id
2020-05-22 00:58:32 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-22 00:58:32 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-22 00:58:32 DEBUG PropertyBinder:266 - Building property movie
2020-05-22 00:58:32 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movieTime, insertable=true, updatable=true, unique=false}
2020-05-22 00:58:32 DEBUG PropertyBinder:175 - MetadataSourceProcessor property movieTime with lazy=false
2020-05-22 00:58:32 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:movieTime]
2020-05-22 00:58:32 DEBUG SimpleValueBinder:411 - building SimpleValue for movieTime
2020-05-22 00:58:32 DEBUG PropertyBinder:266 - Building property movieTime
2020-05-22 00:58:32 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:58:32 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:58:32 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 00:58:32 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:58:32 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-22 00:58:32 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 00:58:32 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 00:58:32 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for movieTime
2020-05-22 00:58:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 00:58:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-22 00:58:32 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-22 00:58:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 00:58:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 00:58:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 00:58:32 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 00:58:32 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 00:58:32 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 00:58:32 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 00:58:32 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 00:58:32 DEBUG Settings:72 - Statistics: disabled
2020-05-22 00:58:32 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 00:58:32 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 00:58:32 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 00:58:32 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 00:58:32 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 00:58:32 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 00:58:32 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 00:58:32 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 00:58:32 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 00:58:32 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 00:58:32 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 00:58:32 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 00:58:32 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 00:58:32 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 00:58:32 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 00:58:32 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 00:58:32 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 00:58:32 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 00:58:32 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 00:58:32 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 00:58:32 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 00:58:32 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 00:58:32 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 00:58:32 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 00:58:32 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 00:58:32 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 00:58:32 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 00:58:32 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 00:58:32 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 00:58:32 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 00:58:32 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 00:58:32 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 00:58:32 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 00:58:32 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 00:58:32 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 00:58:32 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@53dad875, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 00:58:32 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 00:58:32 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 00:58:32 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54dcbb9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6107165]
2020-05-22 00:58:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 00:58:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 00:58:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 00:58:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 00:58:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 00:58:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 00:58:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 00:58:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 00:58:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:58:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:58:33 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 00:58:33 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.CinemaHall
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3860 -  Version select: select id from cinema_hall where id =?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 00:58:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65ddee5a]
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:58:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:58:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:58:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:58:33 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 00:58:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29fa6b65]
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:58:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:58:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:58:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 00:58:33 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 00:58:33 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 00:58:33 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.MovieSession
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie_session where id =?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaha3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.movieTime as movietim2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, movieTime, id) values (?, ?, ?, ?)
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, movieTime=? where id=?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, movieTime) values (?, ?, ?)
2020-05-22 00:58:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c281ed]
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 00:58:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12a14b74]
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 00:58:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c1cfa53]
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movieTime
2020-05-22 00:58:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:58:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:58:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 00:58:33 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.movieTime as movietim2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 00:58:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6232ffdb]
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 00:58:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d28f02]
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 00:58:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6056232d]
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movieTime
2020-05-22 00:58:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:58:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:58:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 00:58:33 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.movieTime as movietim2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 00:58:33 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.movieTime as movietim2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 00:58:33 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.movieTime as movietim2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 00:58:33 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 00:58:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107bfcb2]
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:58:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:58:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:58:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 00:58:33 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:58:33 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab26378]
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 00:58:33 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 00:58:33 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 00:58:33 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 00:58:33 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 00:58:33 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:58:33 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:58:33 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 00:58:33 DEBUG SQL:128 - alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr
2020-05-22 00:58:33 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3f36e8d1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:58:33 DEBUG SQL:128 - alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39
2020-05-22 00:58:33 DEBUG SQL:128 - drop table if exists cinema_hall
2020-05-22 00:58:33 DEBUG SQL:128 - drop table if exists movie
2020-05-22 00:58:33 DEBUG SQL:128 - drop table if exists movie_session
2020-05-22 00:58:33 DEBUG SQL:128 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:58:33 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@67531e3a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 00:58:33 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 00:58:33 DEBUG SQL:128 - create table movie_session (id bigint not null auto_increment, movieTime datetime(6), cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=InnoDB
2020-05-22 00:58:33 DEBUG SQL:128 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-22 00:58:33 DEBUG SQL:128 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-22 00:58:33 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 00:58:33 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 00:58:33 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:58:33 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 00:58:33 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 00:58:33 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 00:58:33 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1192b58e
2020-05-22 00:58:33 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 5b743dcb-337d-4034-9acc-742e011de7e9 (<unnamed>)
2020-05-22 00:58:33 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 00:58:33 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 00:58:33 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:58:33 DEBUG TransactionImpl:81 - begin
2020-05-22 00:58:33 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:58:33 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:58:33 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:58:33 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:58:33 DEBUG TransactionImpl:98 - committing
2020-05-22 00:58:33 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:58:33 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:58:33 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:58:33 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:58:33 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:58:33 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:34 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 00:58:34 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:58:34 DEBUG TransactionImpl:81 - begin
2020-05-22 00:58:34 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:58:34 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:58:34 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:58:34 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:58:34 DEBUG TransactionImpl:98 - committing
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:58:34 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:58:34 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:34 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 00:58:34 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:58:34 DEBUG TransactionImpl:81 - begin
2020-05-22 00:58:34 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:58:34 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 00:58:34 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 00:58:34 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:58:34 DEBUG TransactionImpl:98 - committing
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:58:34 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:58:34 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:34 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 00:58:34 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 00:58:34 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 00:58:34 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@91f565d
2020-05-22 00:58:34 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:58:34 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:58:34 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:58:34 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:58:34 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 00:58:34 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 00:58:34 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:58:34 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 00:58:34 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:58:34 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 00:58:34 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:58:34 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 00:58:34 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:58:34 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 00:58:34 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 00:58:34 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:58:34 DEBUG SQL:128 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 00:58:34 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:58:34 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 00:58:34 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:58:34 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 00:58:34 DEBUG Loader:384 - Result set row: 2
2020-05-22 00:58:34 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:34 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:58:34 DEBUG TransactionImpl:81 - begin
2020-05-22 00:58:34 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:58:34 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 00:58:34 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 00:58:34 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:58:34 DEBUG TransactionImpl:98 - committing
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:58:34 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:58:34 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Big hall, id=1, capacity=100}
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:34 INFO  CinemaHallDaoImpl:29 - New cinema hall 1 has been added to the database
2020-05-22 00:58:34 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 00:58:34 DEBUG TransactionImpl:81 - begin
2020-05-22 00:58:34 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 00:58:34 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 00:58:34 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 00:58:34 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 00:58:34 DEBUG TransactionImpl:98 - committing
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 00:58:34 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 00:58:34 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 00:58:34 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Small cozy hall, id=2, capacity=40}
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 00:58:34 INFO  CinemaHallDaoImpl:29 - New cinema hall 2 has been added to the database
2020-05-22 00:58:34 INFO  CinemaHallDaoImpl:50 - All cinema halls retrieved from the database
2020-05-22 00:58:34 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-22 00:58:34 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 00:58:34 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:58:34 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 00:58:34 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 00:58:34 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-22 00:58:34 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-22 00:58:34 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 00:58:34 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-22 00:58:34 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.CinemaHall)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 00:58:34 DEBUG JoinProcessor:296 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-22 00:58:34 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 00:58:34 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=cinema.model.CinemaHall}}

2020-05-22 00:58:34 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:58:34 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 00:58:34 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 00:58:34 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 00:58:34 DEBUG SQL:128 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 00:58:34 DEBUG Loader:384 - Result set row: 0
2020-05-22 00:58:34 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#1]
2020-05-22 00:58:34 DEBUG Loader:384 - Result set row: 1
2020-05-22 00:58:34 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#2]
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 00:58:34 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 00:58:34 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:02 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 01:31:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 01:31:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 01:31:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 01:31:02 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 01:31:02 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 01:31:02 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 01:31:02 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 01:31:02 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 01:31:02 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 01:31:03 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 01:31:03 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 01:31:03 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 01:31:03 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 01:31:03 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 01:31:03 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@21a21c64
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62ef27a8
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f5ce22
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@512535ff
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5adb0db3
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46268f08
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67304a40
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5023bb8b
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dca0d64
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2cc44ad
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@63dd899
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@40844aab
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@447a020
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@340b9973
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53d102a2
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1338fb5
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7103cb56
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48d5f34e
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fc258b1
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ff65192
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dd80673
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4af0df05
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57ea113a
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@acdb094
2020-05-22 01:31:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@674bd420
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:31:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 01:31:04 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 01:31:04 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 01:31:04 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 01:31:04 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 01:31:04 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 01:31:04 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 01:31:05 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 01:31:05 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 01:31:05 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 01:31:05 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 01:31:05 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 01:31:05 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 01:31:05 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 01:31:05 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@272a179c]
2020-05-22 01:31:05 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:31:05 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 01:31:05 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:31:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:31:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 01:31:05 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:31:05 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:31:05 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:31:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:31:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 01:31:05 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:31:05 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 01:31:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 01:31:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 01:31:05 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 01:31:05 DEBUG PropertyBinder:266 - Building property title
2020-05-22 01:31:05 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.CinemaHall
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:31:05 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-22 01:31:05 DEBUG EntityBinder:873 - Bind entity cinema.model.CinemaHall on table cinema_hall
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:31:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:31:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:id]
2020-05-22 01:31:05 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:31:05 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:31:05 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-22 01:31:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-22 01:31:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:capacity]
2020-05-22 01:31:05 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-22 01:31:05 DEBUG PropertyBinder:266 - Building property capacity
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:31:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:31:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:description]
2020-05-22 01:31:05 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:31:05 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:31:05 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.MovieSession
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:31:05 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-22 01:31:05 DEBUG EntityBinder:873 - Bind entity cinema.model.MovieSession on table movie_session
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:31:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:31:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:id]
2020-05-22 01:31:05 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:31:05 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:31:05 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-22 01:31:05 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-22 01:31:05 DEBUG PropertyBinder:266 - Building property movie
2020-05-22 01:31:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=time, insertable=true, updatable=true, unique=false}
2020-05-22 01:31:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property time with lazy=false
2020-05-22 01:31:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:time]
2020-05-22 01:31:05 DEBUG SimpleValueBinder:411 - building SimpleValue for time
2020-05-22 01:31:05 DEBUG PropertyBinder:266 - Building property time
2020-05-22 01:31:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:31:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:31:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 01:31:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:31:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-22 01:31:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:31:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:31:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for time
2020-05-22 01:31:05 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 01:31:05 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-22 01:31:05 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-22 01:31:05 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:31:05 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:31:05 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:31:05 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:31:05 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 01:31:05 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 01:31:05 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 01:31:05 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 01:31:05 DEBUG Settings:72 - Statistics: disabled
2020-05-22 01:31:05 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 01:31:05 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 01:31:05 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 01:31:05 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 01:31:05 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 01:31:05 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 01:31:05 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 01:31:05 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 01:31:05 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 01:31:05 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 01:31:05 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 01:31:05 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 01:31:05 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 01:31:05 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 01:31:05 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 01:31:05 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 01:31:05 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 01:31:05 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 01:31:05 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 01:31:05 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 01:31:05 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 01:31:05 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 01:31:05 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 01:31:05 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 01:31:05 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 01:31:05 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 01:31:05 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 01:31:05 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 01:31:05 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 01:31:05 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 01:31:05 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 01:31:05 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 01:31:05 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 01:31:05 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 01:31:05 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 01:31:05 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2b329bbd, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 01:31:05 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 01:31:05 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 01:31:05 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f3021cb]
2020-05-22 01:31:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:31:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:31:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:31:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:31:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:31:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:31:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:31:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:31:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:31:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:31:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:31:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.CinemaHall
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3860 -  Version select: select id from cinema_hall where id =?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:31:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d831c2]
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:31:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:31:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:31:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:31:06 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:31:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb740f2]
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:31:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:31:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:31:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:31:06 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:31:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:31:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.MovieSession
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie_session where id =?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaha3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.time as time2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, time, id) values (?, ?, ?, ?)
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, time=? where id=?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:31:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed922e1]
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:31:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338b49d3]
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:31:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af91cc8]
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:31:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:31:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:31:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:31:06 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:31:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6056232d]
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:31:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107bfcb2]
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:31:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab26378]
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:31:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:31:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:31:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:31:06 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:31:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:31:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 01:31:06 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 01:31:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404eca05]
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:31:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:31:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:31:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:31:06 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:31:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a91c9b]
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:31:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:31:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:31:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:31:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:31:06 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:31:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:31:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:31:06 DEBUG SQL:128 - alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr
2020-05-22 01:31:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@40f35e52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:31:06 DEBUG SQL:128 - alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39
2020-05-22 01:31:06 DEBUG SQL:128 - drop table if exists cinema_hall
2020-05-22 01:31:06 DEBUG SQL:128 - drop table if exists movie
2020-05-22 01:31:06 DEBUG SQL:128 - drop table if exists movie_session
2020-05-22 01:31:06 DEBUG SQL:128 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:31:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e766822] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:31:06 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:31:06 DEBUG SQL:128 - create table movie_session (id bigint not null auto_increment, time datetime(6), cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=InnoDB
2020-05-22 01:31:06 DEBUG SQL:128 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-22 01:31:06 DEBUG SQL:128 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-22 01:31:06 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 01:31:06 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 01:31:06 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:31:06 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:31:06 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 01:31:06 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 01:31:06 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12ad1b2a
2020-05-22 01:31:06 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: abf8c60e-356d-4ca3-acd1-b1d6f57f5748 (<unnamed>)
2020-05-22 01:31:06 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 01:31:07 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 01:31:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:31:07 DEBUG TransactionImpl:81 - begin
2020-05-22 01:31:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:31:07 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:31:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:31:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:31:07 DEBUG TransactionImpl:98 - committing
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:31:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:31:07 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:07 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 01:31:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:31:07 DEBUG TransactionImpl:81 - begin
2020-05-22 01:31:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:31:07 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:31:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:31:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:31:07 DEBUG TransactionImpl:98 - committing
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:31:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:31:07 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:07 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 01:31:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:31:07 DEBUG TransactionImpl:81 - begin
2020-05-22 01:31:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:31:07 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:31:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 01:31:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:31:07 DEBUG TransactionImpl:98 - committing
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:31:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:31:07 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:07 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 01:31:07 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 01:31:07 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 01:31:07 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@414f87a9
2020-05-22 01:31:07 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:31:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:31:07 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:31:07 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:31:07 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 01:31:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 01:31:07 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:31:07 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 01:31:07 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:31:07 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 01:31:07 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:31:07 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 01:31:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:31:07 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:31:07 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:31:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:31:07 DEBUG SQL:128 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:31:07 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:31:07 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 01:31:07 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:31:07 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 01:31:07 DEBUG Loader:384 - Result set row: 2
2020-05-22 01:31:07 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:31:07 DEBUG TransactionImpl:81 - begin
2020-05-22 01:31:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:31:07 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:31:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:31:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:31:07 DEBUG TransactionImpl:98 - committing
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:31:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:31:07 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Big hall, id=1, capacity=100}
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:07 INFO  CinemaHallDaoImpl:29 - New cinema hall 1 has been added to the database
2020-05-22 01:31:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:31:07 DEBUG TransactionImpl:81 - begin
2020-05-22 01:31:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:31:07 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:31:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:31:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:31:07 DEBUG TransactionImpl:98 - committing
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:31:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:31:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:31:07 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Small cozy hall, id=2, capacity=40}
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:31:07 INFO  CinemaHallDaoImpl:29 - New cinema hall 2 has been added to the database
2020-05-22 01:31:07 INFO  CinemaHallDaoImpl:50 - All cinema halls retrieved from the database
2020-05-22 01:31:07 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-22 01:31:07 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:31:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:31:07 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:31:07 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:31:07 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-22 01:31:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-22 01:31:07 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:31:07 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-22 01:31:07 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.CinemaHall)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:31:07 DEBUG JoinProcessor:296 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-22 01:31:07 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:31:07 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=cinema.model.CinemaHall}}

2020-05-22 01:31:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:31:07 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:31:07 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:31:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:31:07 DEBUG SQL:128 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:31:07 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:31:07 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#1]
2020-05-22 01:31:07 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:31:07 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#2]
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:31:07 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 01:31:07 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:16 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 01:51:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 01:51:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 01:51:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 01:51:16 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 01:51:16 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 01:51:16 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 01:51:16 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 01:51:16 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 01:51:16 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 01:51:16 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 01:51:16 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 01:51:16 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 01:51:16 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 01:51:16 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 01:51:16 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@21a21c64
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62ef27a8
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f5ce22
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@512535ff
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5adb0db3
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46268f08
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67304a40
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5023bb8b
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dca0d64
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2cc44ad
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@63dd899
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@40844aab
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@447a020
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@340b9973
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53d102a2
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1338fb5
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7103cb56
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48d5f34e
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fc258b1
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ff65192
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dd80673
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4af0df05
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57ea113a
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@acdb094
2020-05-22 01:51:17 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@674bd420
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:51:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 01:51:17 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 01:51:17 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 01:51:17 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 01:51:17 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 01:51:17 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 01:51:17 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 01:51:18 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 01:51:18 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 01:51:18 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 01:51:18 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 01:51:18 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 01:51:18 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 01:51:19 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 01:51:19 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@272a179c]
2020-05-22 01:51:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:51:19 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 01:51:19 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:51:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:51:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 01:51:19 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:51:19 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:51:19 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:51:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:51:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 01:51:19 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:51:19 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 01:51:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 01:51:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 01:51:19 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 01:51:19 DEBUG PropertyBinder:266 - Building property title
2020-05-22 01:51:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.CinemaHall
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:51:19 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-22 01:51:19 DEBUG EntityBinder:873 - Bind entity cinema.model.CinemaHall on table cinema_hall
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:51:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:51:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:id]
2020-05-22 01:51:19 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:51:19 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:51:19 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-22 01:51:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-22 01:51:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:capacity]
2020-05-22 01:51:19 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-22 01:51:19 DEBUG PropertyBinder:266 - Building property capacity
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:51:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:51:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:description]
2020-05-22 01:51:19 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:51:19 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:51:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.MovieSession
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:51:19 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-22 01:51:19 DEBUG EntityBinder:873 - Bind entity cinema.model.MovieSession on table movie_session
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:51:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:51:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:id]
2020-05-22 01:51:19 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:51:19 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:51:19 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-22 01:51:19 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-22 01:51:19 DEBUG PropertyBinder:266 - Building property movie
2020-05-22 01:51:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=time, insertable=true, updatable=true, unique=false}
2020-05-22 01:51:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property time with lazy=false
2020-05-22 01:51:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:time]
2020-05-22 01:51:19 DEBUG SimpleValueBinder:411 - building SimpleValue for time
2020-05-22 01:51:19 DEBUG PropertyBinder:266 - Building property time
2020-05-22 01:51:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:51:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:51:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 01:51:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:51:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-22 01:51:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:51:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:51:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for time
2020-05-22 01:51:19 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 01:51:19 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-22 01:51:19 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-22 01:51:19 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:51:19 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:51:19 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:51:19 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:51:19 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 01:51:19 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 01:51:19 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 01:51:19 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 01:51:19 DEBUG Settings:72 - Statistics: disabled
2020-05-22 01:51:19 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 01:51:19 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 01:51:19 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 01:51:19 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 01:51:19 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 01:51:19 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 01:51:19 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 01:51:19 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 01:51:19 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 01:51:19 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 01:51:19 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 01:51:19 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 01:51:19 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 01:51:19 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 01:51:19 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 01:51:19 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 01:51:19 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 01:51:19 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 01:51:19 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 01:51:19 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 01:51:19 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 01:51:19 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 01:51:19 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 01:51:19 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 01:51:19 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 01:51:19 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 01:51:19 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 01:51:19 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 01:51:19 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 01:51:19 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 01:51:19 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 01:51:19 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 01:51:19 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 01:51:19 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 01:51:19 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 01:51:19 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2b329bbd, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 01:51:19 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 01:51:19 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 01:51:19 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f3021cb]
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:51:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.CinemaHall
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3860 -  Version select: select id from cinema_hall where id =?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:51:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d831c2]
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:51:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:51:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:51:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:51:20 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:51:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb740f2]
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:51:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:51:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:51:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:51:20 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:51:20 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:51:20 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.MovieSession
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie_session where id =?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaha3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.time as time2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, time, id) values (?, ?, ?, ?)
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, time=? where id=?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:51:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed922e1]
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:51:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338b49d3]
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:51:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af91cc8]
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:51:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:51:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:51:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:51:20 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:51:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6056232d]
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:51:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107bfcb2]
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:51:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab26378]
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:51:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:51:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:51:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:51:20 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:51:20 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:51:20 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 01:51:20 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 01:51:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404eca05]
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:51:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:51:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:51:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:51:20 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:51:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a91c9b]
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:51:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:51:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:51:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:51:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:51:20 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:51:20 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:51:20 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:51:20 DEBUG SQL:128 - alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr
2020-05-22 01:51:20 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@40f35e52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:51:20 DEBUG SQL:128 - alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39
2020-05-22 01:51:20 DEBUG SQL:128 - drop table if exists cinema_hall
2020-05-22 01:51:20 DEBUG SQL:128 - drop table if exists movie
2020-05-22 01:51:20 DEBUG SQL:128 - drop table if exists movie_session
2020-05-22 01:51:20 DEBUG SQL:128 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:51:20 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e766822] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:51:20 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:51:20 DEBUG SQL:128 - create table movie_session (id bigint not null auto_increment, time datetime(6), cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=InnoDB
2020-05-22 01:51:20 DEBUG SQL:128 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-22 01:51:20 DEBUG SQL:128 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-22 01:51:20 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 01:51:20 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 01:51:20 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:51:20 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:51:20 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 01:51:20 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 01:51:20 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12ad1b2a
2020-05-22 01:51:20 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 90c1ac3b-349f-4f89-bdff-06ffc40d73de (<unnamed>)
2020-05-22 01:51:20 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 01:51:20 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 01:51:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:51:20 DEBUG TransactionImpl:81 - begin
2020-05-22 01:51:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:51:20 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:51:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:51:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:51:20 DEBUG TransactionImpl:98 - committing
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:51:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:51:20 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 01:51:20 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:20 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:20 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 01:51:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:51:20 DEBUG TransactionImpl:81 - begin
2020-05-22 01:51:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:51:20 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:51:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:51:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:51:20 DEBUG TransactionImpl:98 - committing
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:51:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:51:20 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 01:51:20 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:20 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:20 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 01:51:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:51:20 DEBUG TransactionImpl:81 - begin
2020-05-22 01:51:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:51:20 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:51:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 01:51:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:51:20 DEBUG TransactionImpl:98 - committing
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:51:20 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:51:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:51:20 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 01:51:20 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:20 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:20 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 01:51:20 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 01:51:20 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 01:51:20 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@414f87a9
2020-05-22 01:51:20 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:51:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:51:20 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:51:20 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:51:20 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 01:51:20 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 01:51:20 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:51:20 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 01:51:20 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:51:20 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 01:51:20 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:51:20 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 01:51:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:51:20 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:51:20 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:51:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:51:21 DEBUG SQL:128 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:51:21 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:51:21 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 01:51:21 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:51:21 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 01:51:21 DEBUG Loader:384 - Result set row: 2
2020-05-22 01:51:21 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 01:51:21 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:21 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:51:21 DEBUG TransactionImpl:81 - begin
2020-05-22 01:51:21 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:51:21 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:51:21 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:51:21 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:51:21 DEBUG TransactionImpl:98 - committing
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:51:21 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:51:21 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Big hall, id=1, capacity=100}
2020-05-22 01:51:21 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:21 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:21 INFO  CinemaHallDaoImpl:29 - New cinema hall 1 has been added to the database
2020-05-22 01:51:21 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:51:21 DEBUG TransactionImpl:81 - begin
2020-05-22 01:51:21 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:51:21 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:51:21 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:51:21 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:51:21 DEBUG TransactionImpl:98 - committing
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:51:21 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:51:21 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Small cozy hall, id=2, capacity=40}
2020-05-22 01:51:21 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:21 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:21 INFO  CinemaHallDaoImpl:29 - New cinema hall 2 has been added to the database
2020-05-22 01:51:21 INFO  CinemaHallDaoImpl:50 - All cinema halls retrieved from the database
2020-05-22 01:51:21 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-22 01:51:21 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:51:21 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:51:21 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:51:21 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:51:21 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-22 01:51:21 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-22 01:51:21 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:51:21 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-22 01:51:21 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.CinemaHall)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:51:21 DEBUG JoinProcessor:296 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-22 01:51:21 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:51:21 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=cinema.model.CinemaHall}}

2020-05-22 01:51:21 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:51:21 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:51:21 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:51:21 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:51:21 DEBUG SQL:128 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:51:21 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:51:21 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#1]
2020-05-22 01:51:21 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:51:21 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#2]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 01:51:21 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:21 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:51:21 DEBUG TransactionImpl:81 - begin
2020-05-22 01:51:21 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:51:21 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:51:21 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:51:21 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:51:21 DEBUG TransactionImpl:98 - committing
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:51:21 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:51:21 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:51:21 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#1, movie=cinema.model.Movie#1, id=1, time=2020-05-30T10:00}
2020-05-22 01:51:21 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:21 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:51:21 INFO  MovieSessionDao:34 - New movie session 1  has been added to the database
2020-05-22 01:51:21 INFO  MovieSessionDao:61 - Available movie sessions has been retrieved
2020-05-22 01:51:21 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:51:21 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:51:21 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:51:21 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'time'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-22 01:51:21 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:51:21 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-22 01:51:21 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:51:21 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:51:21 DEBUG DotNode:694 - getDataType() : movie -> org.hibernate.type.ManyToOneType(cinema.model.Movie)
2020-05-22 01:51:21 DEBUG DotNode:652 - dereferenceShortcut() : property movie in cinema.model.MovieSession does not require a join.
2020-05-22 01:51:21 DEBUG DotNode:681 - Terminal getPropertyPath = [movie]
2020-05-22 01:51:21 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-22 01:51:21 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:51:21 DEBUG DotNode:694 - getDataType() : time -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:51:21 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.time -> moviesessi0_.time
2020-05-22 01:51:21 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:51:21 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( >= ( moviesessi0_.time moviesessi0_.id time ) ? ) ) ) )
2020-05-22 01:51:21 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  | path: generatedAlias0.movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             | path: generatedAlias0.time
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: time
             \-ParameterNode

2020-05-22 01:51:21 DEBUG JoinProcessor:296 - Using FROM fragment [movie_session moviesessi0_]
2020-05-22 01:51:21 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:51:21 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'moviesessi0_.time' {propertyName=time,dereferenceType=PRIMITIVE,getPropertyPath=time,path=generatedAlias0.time,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'time' {originalText=time}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@2dc995f4}

2020-05-22 01:51:21 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:51:21 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:51:21 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:51:21 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:51:21 DEBUG SQL:128 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:51:21 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:51:21 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#1]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#1]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 1
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:51:21 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:51:21 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#1
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG SQL:128 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:51:21 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:51:21 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.Movie#1
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-30T10:00
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 01:51:21 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#1]
2020-05-22 01:51:21 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:22 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 01:52:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 01:52:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 01:52:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 01:52:22 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 01:52:22 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 01:52:23 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 01:52:23 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 01:52:23 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 01:52:23 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 01:52:23 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 01:52:23 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 01:52:23 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 01:52:23 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 01:52:23 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 01:52:23 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@21a21c64
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62ef27a8
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f5ce22
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@512535ff
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5adb0db3
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46268f08
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67304a40
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5023bb8b
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dca0d64
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2cc44ad
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@63dd899
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@40844aab
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@447a020
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@340b9973
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53d102a2
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1338fb5
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7103cb56
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48d5f34e
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fc258b1
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ff65192
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dd80673
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4af0df05
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57ea113a
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@acdb094
2020-05-22 01:52:24 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@674bd420
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:52:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 01:52:24 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 01:52:24 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 01:52:24 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 01:52:24 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 01:52:24 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 01:52:24 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 01:52:25 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 01:52:25 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 01:52:25 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 01:52:25 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 01:52:25 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 01:52:25 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 01:52:25 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 01:52:25 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@272a179c]
2020-05-22 01:52:25 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:52:26 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 01:52:26 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:52:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:52:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 01:52:26 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:52:26 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:52:26 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:52:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:52:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 01:52:26 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:52:26 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 01:52:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 01:52:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 01:52:26 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 01:52:26 DEBUG PropertyBinder:266 - Building property title
2020-05-22 01:52:26 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.CinemaHall
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:52:26 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-22 01:52:26 DEBUG EntityBinder:873 - Bind entity cinema.model.CinemaHall on table cinema_hall
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:52:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:52:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:id]
2020-05-22 01:52:26 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:52:26 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:52:26 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-22 01:52:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-22 01:52:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:capacity]
2020-05-22 01:52:26 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-22 01:52:26 DEBUG PropertyBinder:266 - Building property capacity
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:52:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:52:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:description]
2020-05-22 01:52:26 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:52:26 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:52:26 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.MovieSession
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:52:26 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-22 01:52:26 DEBUG EntityBinder:873 - Bind entity cinema.model.MovieSession on table movie_session
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:52:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:52:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:id]
2020-05-22 01:52:26 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:52:26 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:52:26 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-22 01:52:26 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-22 01:52:26 DEBUG PropertyBinder:266 - Building property movie
2020-05-22 01:52:26 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=time, insertable=true, updatable=true, unique=false}
2020-05-22 01:52:26 DEBUG PropertyBinder:175 - MetadataSourceProcessor property time with lazy=false
2020-05-22 01:52:26 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:time]
2020-05-22 01:52:26 DEBUG SimpleValueBinder:411 - building SimpleValue for time
2020-05-22 01:52:26 DEBUG PropertyBinder:266 - Building property time
2020-05-22 01:52:26 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:52:26 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:52:26 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 01:52:26 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:52:26 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-22 01:52:26 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:52:26 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:52:26 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for time
2020-05-22 01:52:26 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 01:52:26 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-22 01:52:26 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-22 01:52:26 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:52:26 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:52:26 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:52:26 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:52:26 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 01:52:26 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 01:52:26 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 01:52:26 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 01:52:26 DEBUG Settings:72 - Statistics: disabled
2020-05-22 01:52:26 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 01:52:26 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 01:52:26 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 01:52:26 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 01:52:26 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 01:52:26 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 01:52:26 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 01:52:26 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 01:52:26 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 01:52:26 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 01:52:26 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 01:52:26 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 01:52:26 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 01:52:26 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 01:52:26 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 01:52:26 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 01:52:26 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 01:52:26 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 01:52:26 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 01:52:26 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 01:52:26 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 01:52:26 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 01:52:26 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 01:52:26 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 01:52:26 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 01:52:26 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 01:52:26 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 01:52:26 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 01:52:26 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 01:52:26 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 01:52:26 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 01:52:26 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 01:52:26 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 01:52:26 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 01:52:26 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 01:52:26 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2b329bbd, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 01:52:26 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 01:52:26 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 01:52:26 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f3021cb]
2020-05-22 01:52:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:52:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:52:26 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:52:26 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:52:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:52:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:52:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:52:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:52:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:52:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:52:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:52:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.CinemaHall
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3860 -  Version select: select id from cinema_hall where id =?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:52:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d831c2]
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:52:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:52:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:52:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:52:27 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:52:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb740f2]
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:52:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:52:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:52:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:52:27 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:52:27 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:52:27 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.MovieSession
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie_session where id =?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaha3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.time as time2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, time, id) values (?, ?, ?, ?)
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, time=? where id=?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:52:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed922e1]
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:52:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338b49d3]
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:52:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af91cc8]
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:52:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:52:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:52:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:52:27 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:52:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6056232d]
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:52:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107bfcb2]
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:52:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab26378]
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:52:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:52:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:52:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:52:27 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:52:27 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:52:27 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 01:52:27 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 01:52:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404eca05]
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:52:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:52:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:52:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:52:27 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:52:27 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a91c9b]
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:52:27 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:52:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:52:27 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:52:27 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:52:27 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:52:27 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:52:27 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:52:27 DEBUG SQL:128 - alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr
2020-05-22 01:52:27 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@40f35e52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:52:27 DEBUG SQL:128 - alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39
2020-05-22 01:52:27 DEBUG SQL:128 - drop table if exists cinema_hall
2020-05-22 01:52:27 DEBUG SQL:128 - drop table if exists movie
2020-05-22 01:52:28 DEBUG SQL:128 - drop table if exists movie_session
2020-05-22 01:52:28 DEBUG SQL:128 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:52:28 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e766822] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:52:28 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:52:29 DEBUG SQL:128 - create table movie_session (id bigint not null auto_increment, time datetime(6), cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=InnoDB
2020-05-22 01:52:29 DEBUG SQL:128 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-22 01:52:30 DEBUG SQL:128 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-22 01:52:30 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 01:52:30 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 01:52:30 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:52:30 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:52:30 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 01:52:30 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 01:52:30 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12ad1b2a
2020-05-22 01:52:30 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: cae94b3d-95f2-4674-a952-b60e749230e8 (<unnamed>)
2020-05-22 01:52:30 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 01:52:30 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 01:52:30 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:52:30 DEBUG TransactionImpl:81 - begin
2020-05-22 01:52:30 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:52:30 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:52:30 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:52:30 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:52:30 DEBUG TransactionImpl:98 - committing
2020-05-22 01:52:30 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:52:30 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:52:30 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:52:30 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:52:30 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:52:30 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 01:52:31 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:52:31 DEBUG TransactionImpl:81 - begin
2020-05-22 01:52:31 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:52:31 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:52:31 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:52:31 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:52:31 DEBUG TransactionImpl:98 - committing
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:52:31 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:52:31 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 01:52:31 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:52:31 DEBUG TransactionImpl:81 - begin
2020-05-22 01:52:31 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:52:31 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:52:31 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 01:52:31 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:52:31 DEBUG TransactionImpl:98 - committing
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:52:31 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:52:31 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 01:52:31 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 01:52:31 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 01:52:31 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@414f87a9
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:52:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:52:31 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:52:31 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 01:52:31 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 01:52:31 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:52:31 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 01:52:31 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:52:31 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 01:52:31 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 01:52:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:52:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:52:31 DEBUG SQL:128 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:52:31 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:52:31 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 01:52:31 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:52:31 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 01:52:31 DEBUG Loader:384 - Result set row: 2
2020-05-22 01:52:31 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:52:31 DEBUG TransactionImpl:81 - begin
2020-05-22 01:52:31 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:52:31 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:52:31 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:52:31 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:52:31 DEBUG TransactionImpl:98 - committing
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:52:31 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:52:31 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Big hall, id=1, capacity=100}
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 INFO  CinemaHallDaoImpl:29 - New cinema hall 1 has been added to the database
2020-05-22 01:52:31 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:52:31 DEBUG TransactionImpl:81 - begin
2020-05-22 01:52:31 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:52:31 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:52:31 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:52:31 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:52:31 DEBUG TransactionImpl:98 - committing
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:52:31 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:52:31 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Small cozy hall, id=2, capacity=40}
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 INFO  CinemaHallDaoImpl:29 - New cinema hall 2 has been added to the database
2020-05-22 01:52:31 INFO  CinemaHallDaoImpl:50 - All cinema halls retrieved from the database
2020-05-22 01:52:31 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:52:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:52:31 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:52:31 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-22 01:52:31 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-22 01:52:31 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:52:31 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-22 01:52:31 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.CinemaHall)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:52:31 DEBUG JoinProcessor:296 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-22 01:52:31 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=cinema.model.CinemaHall}}

2020-05-22 01:52:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:52:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:52:31 DEBUG SQL:128 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:52:31 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:52:31 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#1]
2020-05-22 01:52:31 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:52:31 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#2]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:52:31 DEBUG TransactionImpl:81 - begin
2020-05-22 01:52:31 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:52:31 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:52:31 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:52:31 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:52:31 DEBUG TransactionImpl:98 - committing
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:52:31 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:52:31 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:52:31 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#1, movie=cinema.model.Movie#1, id=1, time=2020-05-30T10:00}
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:52:31 INFO  MovieSessionDao:34 - New movie session 1  has been added to the database
2020-05-22 01:52:31 INFO  MovieSessionDao:61 - Available movie sessions has been retrieved
2020-05-22 01:52:31 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:52:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'time'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-22 01:52:31 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:52:31 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-22 01:52:31 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:52:31 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:52:31 DEBUG DotNode:694 - getDataType() : movie -> org.hibernate.type.ManyToOneType(cinema.model.Movie)
2020-05-22 01:52:31 DEBUG DotNode:652 - dereferenceShortcut() : property movie in cinema.model.MovieSession does not require a join.
2020-05-22 01:52:31 DEBUG DotNode:681 - Terminal getPropertyPath = [movie]
2020-05-22 01:52:31 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-22 01:52:31 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:52:31 DEBUG DotNode:694 - getDataType() : time -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:52:31 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.time -> moviesessi0_.time
2020-05-22 01:52:31 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:52:31 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( >= ( moviesessi0_.time moviesessi0_.id time ) ? ) ) ) )
2020-05-22 01:52:31 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  | path: generatedAlias0.movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             | path: generatedAlias0.time
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: time
             \-ParameterNode

2020-05-22 01:52:31 DEBUG JoinProcessor:296 - Using FROM fragment [movie_session moviesessi0_]
2020-05-22 01:52:31 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'moviesessi0_.time' {propertyName=time,dereferenceType=PRIMITIVE,getPropertyPath=time,path=generatedAlias0.time,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'time' {originalText=time}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@2dc995f4}

2020-05-22 01:52:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:52:31 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:52:31 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:52:31 DEBUG SQL:128 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:52:31 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:52:31 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#1]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#1]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 1
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:52:31 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:52:31 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#1
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG SQL:128 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:52:31 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:52:31 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.Movie#1
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-30T10:00
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 01:52:31 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#1]
2020-05-22 01:52:31 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:21 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 01:53:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 01:53:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 01:53:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 01:53:21 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 01:53:21 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 01:53:21 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 01:53:21 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 01:53:21 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 01:53:21 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 01:53:22 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 01:53:22 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 01:53:22 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 01:53:22 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 01:53:22 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 01:53:22 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@21a21c64
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62ef27a8
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f5ce22
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@512535ff
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5adb0db3
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46268f08
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67304a40
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5023bb8b
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dca0d64
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2cc44ad
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@63dd899
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@40844aab
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@447a020
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@340b9973
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53d102a2
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1338fb5
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7103cb56
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:53:22 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48d5f34e
2020-05-22 01:53:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fc258b1
2020-05-22 01:53:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ff65192
2020-05-22 01:53:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dd80673
2020-05-22 01:53:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4af0df05
2020-05-22 01:53:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57ea113a
2020-05-22 01:53:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@acdb094
2020-05-22 01:53:23 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@674bd420
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:53:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 01:53:23 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 01:53:23 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 01:53:23 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 01:53:23 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 01:53:23 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 01:53:23 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 01:53:24 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 01:53:24 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 01:53:24 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 01:53:24 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 01:53:24 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 01:53:24 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 01:53:24 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 01:53:24 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@272a179c]
2020-05-22 01:53:24 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:53:24 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 01:53:24 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:53:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:53:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 01:53:24 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:53:24 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:53:24 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:53:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:53:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 01:53:24 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:53:24 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 01:53:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 01:53:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 01:53:24 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 01:53:24 DEBUG PropertyBinder:266 - Building property title
2020-05-22 01:53:24 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.CinemaHall
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:53:24 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-22 01:53:24 DEBUG EntityBinder:873 - Bind entity cinema.model.CinemaHall on table cinema_hall
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:53:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:53:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:id]
2020-05-22 01:53:24 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:53:24 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:53:24 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-22 01:53:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-22 01:53:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:capacity]
2020-05-22 01:53:24 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-22 01:53:24 DEBUG PropertyBinder:266 - Building property capacity
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:53:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:53:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:description]
2020-05-22 01:53:24 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:53:24 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:53:24 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.MovieSession
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:53:24 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-22 01:53:24 DEBUG EntityBinder:873 - Bind entity cinema.model.MovieSession on table movie_session
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:53:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:53:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:id]
2020-05-22 01:53:24 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:53:24 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:53:24 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-22 01:53:24 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-22 01:53:24 DEBUG PropertyBinder:266 - Building property movie
2020-05-22 01:53:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=time, insertable=true, updatable=true, unique=false}
2020-05-22 01:53:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property time with lazy=false
2020-05-22 01:53:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:time]
2020-05-22 01:53:24 DEBUG SimpleValueBinder:411 - building SimpleValue for time
2020-05-22 01:53:24 DEBUG PropertyBinder:266 - Building property time
2020-05-22 01:53:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:53:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:53:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 01:53:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:53:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-22 01:53:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:53:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:53:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for time
2020-05-22 01:53:24 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 01:53:24 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-22 01:53:24 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-22 01:53:24 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:53:24 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:53:24 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:53:24 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:53:24 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 01:53:24 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 01:53:24 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 01:53:24 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 01:53:24 DEBUG Settings:72 - Statistics: disabled
2020-05-22 01:53:24 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 01:53:24 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 01:53:24 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 01:53:24 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 01:53:24 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 01:53:24 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 01:53:24 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 01:53:24 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 01:53:24 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 01:53:24 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 01:53:24 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 01:53:24 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 01:53:24 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 01:53:24 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 01:53:24 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 01:53:24 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 01:53:24 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 01:53:24 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 01:53:24 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 01:53:24 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 01:53:24 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 01:53:24 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 01:53:24 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 01:53:24 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 01:53:24 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 01:53:24 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 01:53:24 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 01:53:24 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 01:53:24 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 01:53:24 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 01:53:24 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 01:53:24 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 01:53:24 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 01:53:24 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 01:53:24 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 01:53:24 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2b329bbd, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 01:53:24 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 01:53:24 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 01:53:24 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f3021cb]
2020-05-22 01:53:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:53:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:53:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:53:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:53:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:53:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:53:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:53:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:53:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:53:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:53:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:53:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.CinemaHall
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3860 -  Version select: select id from cinema_hall where id =?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:53:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d831c2]
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:53:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:53:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:53:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:53:25 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:53:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb740f2]
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:53:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:53:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:53:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:53:25 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:53:25 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:53:25 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.MovieSession
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie_session where id =?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaha3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.time as time2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, time, id) values (?, ?, ?, ?)
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, time=? where id=?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:53:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed922e1]
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:53:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338b49d3]
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:53:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af91cc8]
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:53:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:53:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:53:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:53:25 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:53:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6056232d]
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:53:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107bfcb2]
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:53:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab26378]
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:53:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:53:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:53:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:53:25 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:53:25 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:53:25 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 01:53:25 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 01:53:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404eca05]
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:53:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:53:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:53:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:53:25 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:53:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a91c9b]
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:53:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:53:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:53:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:53:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:53:25 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:53:25 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:53:25 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:53:25 DEBUG SQL:128 - alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr
2020-05-22 01:53:25 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@40f35e52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:53:25 DEBUG SQL:128 - alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39
2020-05-22 01:53:25 DEBUG SQL:128 - drop table if exists cinema_hall
2020-05-22 01:53:25 DEBUG SQL:128 - drop table if exists movie
2020-05-22 01:53:25 DEBUG SQL:128 - drop table if exists movie_session
2020-05-22 01:53:25 DEBUG SQL:128 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:53:25 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e766822] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:53:25 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:53:25 DEBUG SQL:128 - create table movie_session (id bigint not null auto_increment, time datetime(6), cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=InnoDB
2020-05-22 01:53:25 DEBUG SQL:128 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-22 01:53:25 DEBUG SQL:128 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-22 01:53:26 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 01:53:26 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 01:53:26 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:53:26 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:53:26 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 01:53:26 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 01:53:26 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12ad1b2a
2020-05-22 01:53:26 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: e5b114df-8e69-455b-b0c7-06d907dc4a6e (<unnamed>)
2020-05-22 01:53:26 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 01:53:26 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 01:53:26 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:53:26 DEBUG TransactionImpl:81 - begin
2020-05-22 01:53:26 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:53:26 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:53:26 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:53:26 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:53:26 DEBUG TransactionImpl:98 - committing
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:53:26 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:53:26 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 01:53:26 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:53:26 DEBUG TransactionImpl:81 - begin
2020-05-22 01:53:26 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:53:26 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:53:26 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:53:26 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:53:26 DEBUG TransactionImpl:98 - committing
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:53:26 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:53:26 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 01:53:26 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:53:26 DEBUG TransactionImpl:81 - begin
2020-05-22 01:53:26 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:53:26 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:53:26 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 01:53:26 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:53:26 DEBUG TransactionImpl:98 - committing
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:53:26 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:53:26 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 01:53:26 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 01:53:26 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 01:53:26 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@414f87a9
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:53:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:53:26 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:53:26 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 01:53:26 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 01:53:26 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:53:26 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 01:53:26 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:53:26 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 01:53:26 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 01:53:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:53:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:53:26 DEBUG SQL:128 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:53:26 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:53:26 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 01:53:26 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:53:26 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 01:53:26 DEBUG Loader:384 - Result set row: 2
2020-05-22 01:53:26 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:53:26 DEBUG TransactionImpl:81 - begin
2020-05-22 01:53:26 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:53:26 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:53:26 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:53:26 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:53:26 DEBUG TransactionImpl:98 - committing
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:53:26 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:53:26 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Big hall, id=1, capacity=100}
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 INFO  CinemaHallDaoImpl:29 - New cinema hall 1 has been added to the database
2020-05-22 01:53:26 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:53:26 DEBUG TransactionImpl:81 - begin
2020-05-22 01:53:26 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:53:26 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:53:26 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:53:26 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:53:26 DEBUG TransactionImpl:98 - committing
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:53:26 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:53:26 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Small cozy hall, id=2, capacity=40}
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 INFO  CinemaHallDaoImpl:29 - New cinema hall 2 has been added to the database
2020-05-22 01:53:26 INFO  CinemaHallDaoImpl:50 - All cinema halls retrieved from the database
2020-05-22 01:53:26 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:53:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:53:26 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:53:26 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-22 01:53:26 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-22 01:53:26 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:53:26 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-22 01:53:26 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.CinemaHall)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:53:26 DEBUG JoinProcessor:296 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-22 01:53:26 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=cinema.model.CinemaHall}}

2020-05-22 01:53:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:53:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:53:26 DEBUG SQL:128 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:53:26 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:53:26 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#1]
2020-05-22 01:53:26 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:53:26 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#2]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:53:26 DEBUG TransactionImpl:81 - begin
2020-05-22 01:53:26 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:53:26 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:53:26 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:53:26 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:53:26 DEBUG TransactionImpl:98 - committing
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:53:26 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:53:26 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:53:26 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#1, movie=cinema.model.Movie#1, id=1, time=2020-05-30T10:00}
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:53:26 INFO  MovieSessionDao:34 - New movie session 1  has been added to the database
2020-05-22 01:53:26 INFO  MovieSessionDao:61 - Available movie sessions has been retrieved
2020-05-22 01:53:26 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:53:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'time'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-22 01:53:26 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:53:26 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-22 01:53:26 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:53:26 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:53:26 DEBUG DotNode:694 - getDataType() : movie -> org.hibernate.type.ManyToOneType(cinema.model.Movie)
2020-05-22 01:53:26 DEBUG DotNode:652 - dereferenceShortcut() : property movie in cinema.model.MovieSession does not require a join.
2020-05-22 01:53:26 DEBUG DotNode:681 - Terminal getPropertyPath = [movie]
2020-05-22 01:53:26 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-22 01:53:26 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:53:26 DEBUG DotNode:694 - getDataType() : time -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:53:26 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.time -> moviesessi0_.time
2020-05-22 01:53:26 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:53:26 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( >= ( moviesessi0_.time moviesessi0_.id time ) ? ) ) ) )
2020-05-22 01:53:26 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  | path: generatedAlias0.movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             | path: generatedAlias0.time
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: time
             \-ParameterNode

2020-05-22 01:53:26 DEBUG JoinProcessor:296 - Using FROM fragment [movie_session moviesessi0_]
2020-05-22 01:53:26 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'moviesessi0_.time' {propertyName=time,dereferenceType=PRIMITIVE,getPropertyPath=time,path=generatedAlias0.time,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'time' {originalText=time}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@2dc995f4}

2020-05-22 01:53:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:53:26 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:53:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:53:26 DEBUG SQL:128 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:53:26 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:53:26 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#1]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#1]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 1
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:53:26 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:53:26 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#1
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG SQL:128 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:53:26 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:53:26 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.Movie#1
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-30T10:00
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 01:53:26 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#1]
2020-05-22 01:53:26 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:11 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 01:55:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 01:55:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 01:55:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 01:55:11 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 01:55:11 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 01:55:11 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 01:55:11 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 01:55:11 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 01:55:11 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 01:55:12 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 01:55:12 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 01:55:12 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 01:55:12 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 01:55:12 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 01:55:12 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@21a21c64
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62ef27a8
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f5ce22
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@512535ff
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5adb0db3
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46268f08
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67304a40
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5023bb8b
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dca0d64
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2cc44ad
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@63dd899
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@40844aab
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@447a020
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@340b9973
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53d102a2
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1338fb5
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7103cb56
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48d5f34e
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fc258b1
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ff65192
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dd80673
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4af0df05
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57ea113a
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@acdb094
2020-05-22 01:55:12 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@674bd420
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:55:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 01:55:12 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 01:55:12 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 01:55:12 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 01:55:12 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 01:55:12 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 01:55:12 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 01:55:13 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 01:55:13 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 01:55:13 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 01:55:13 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 01:55:13 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 01:55:13 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 01:55:13 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 01:55:13 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@272a179c]
2020-05-22 01:55:13 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 01:55:13 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:55:13 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 01:55:14 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:55:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 01:55:14 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:55:14 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:55:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:55:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 01:55:14 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:55:14 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 01:55:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 01:55:14 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 01:55:14 DEBUG PropertyBinder:266 - Building property title
2020-05-22 01:55:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.CinemaHall
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:55:14 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-22 01:55:14 DEBUG EntityBinder:873 - Bind entity cinema.model.CinemaHall on table cinema_hall
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:55:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:id]
2020-05-22 01:55:14 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:55:14 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:55:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-22 01:55:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:capacity]
2020-05-22 01:55:14 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-22 01:55:14 DEBUG PropertyBinder:266 - Building property capacity
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:55:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:description]
2020-05-22 01:55:14 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:55:14 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:55:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.MovieSession
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:55:14 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-22 01:55:14 DEBUG EntityBinder:873 - Bind entity cinema.model.MovieSession on table movie_session
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:55:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:id]
2020-05-22 01:55:14 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:55:14 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:55:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:14 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:14 DEBUG PropertyBinder:266 - Building property movie
2020-05-22 01:55:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=time, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property time with lazy=false
2020-05-22 01:55:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:time]
2020-05-22 01:55:14 DEBUG SimpleValueBinder:411 - building SimpleValue for time
2020-05-22 01:55:14 DEBUG PropertyBinder:266 - Building property time
2020-05-22 01:55:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:55:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:55:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 01:55:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:55:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-22 01:55:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:55:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:55:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for time
2020-05-22 01:55:14 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 01:55:14 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-22 01:55:14 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-22 01:55:14 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:55:14 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:55:14 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:55:14 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:55:14 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 01:55:14 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 01:55:14 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 01:55:14 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 01:55:14 DEBUG Settings:72 - Statistics: disabled
2020-05-22 01:55:14 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 01:55:14 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 01:55:14 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 01:55:14 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 01:55:14 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 01:55:14 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 01:55:14 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 01:55:14 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 01:55:14 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 01:55:14 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 01:55:14 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 01:55:14 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 01:55:14 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 01:55:14 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 01:55:14 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 01:55:14 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 01:55:14 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 01:55:14 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 01:55:14 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 01:55:14 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 01:55:14 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 01:55:14 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 01:55:14 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 01:55:14 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 01:55:14 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 01:55:14 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 01:55:14 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 01:55:14 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 01:55:14 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 01:55:14 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 01:55:14 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 01:55:14 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 01:55:14 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 01:55:14 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 01:55:14 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 01:55:14 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2b329bbd, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 01:55:14 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 01:55:14 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 01:55:14 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f3021cb]
2020-05-22 01:55:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:55:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:55:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:55:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:55:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:55:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:55:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:55:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:55:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:55:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:55:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:55:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.CinemaHall
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3860 -  Version select: select id from cinema_hall where id =?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:55:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d831c2]
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:55:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:55:15 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:55:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb740f2]
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:55:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:55:15 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:55:15 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:55:15 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.MovieSession
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie_session where id =?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaha3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.time as time2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, time, id) values (?, ?, ?, ?)
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, time=? where id=?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:55:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed922e1]
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:55:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338b49d3]
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:55:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af91cc8]
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:55:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:55:15 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:55:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6056232d]
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:55:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107bfcb2]
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:55:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab26378]
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:55:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:55:15 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:55:15 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:55:15 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 01:55:15 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 01:55:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404eca05]
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:55:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:55:15 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:55:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a91c9b]
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:55:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:55:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:55:15 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:55:15 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:55:15 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:55:15 DEBUG SQL:128 - alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr
2020-05-22 01:55:15 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@40f35e52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:55:15 DEBUG SQL:128 - alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39
2020-05-22 01:55:15 DEBUG SQL:128 - drop table if exists cinema_hall
2020-05-22 01:55:15 DEBUG SQL:128 - drop table if exists movie
2020-05-22 01:55:15 DEBUG SQL:128 - drop table if exists movie_session
2020-05-22 01:55:15 DEBUG SQL:128 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:55:15 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e766822] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:55:15 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:55:15 DEBUG SQL:128 - create table movie_session (id bigint not null auto_increment, time datetime(6), cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=InnoDB
2020-05-22 01:55:15 DEBUG SQL:128 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-22 01:55:15 DEBUG SQL:128 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-22 01:55:15 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 01:55:15 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 01:55:15 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:55:15 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:55:15 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 01:55:15 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 01:55:15 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12ad1b2a
2020-05-22 01:55:15 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: f4d11aea-552d-4c0c-9d68-73e46fd613e1 (<unnamed>)
2020-05-22 01:55:15 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 01:55:15 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 01:55:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:15 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:15 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:55:15 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:55:15 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:15 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:15 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:15 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:15 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:15 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:15 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:16 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 01:55:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:16 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:16 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:55:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:55:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:16 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:16 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 01:55:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:16 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:16 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:55:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 01:55:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:16 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:16 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 01:55:16 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 01:55:16 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 01:55:16 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@414f87a9
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:55:16 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:55:16 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 01:55:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 01:55:16 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:55:16 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 01:55:16 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:55:16 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 01:55:16 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 01:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:16 DEBUG SQL:128 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:55:16 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:55:16 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 01:55:16 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:55:16 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 01:55:16 DEBUG Loader:384 - Result set row: 2
2020-05-22 01:55:16 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:16 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:16 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:55:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:55:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:16 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:16 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Big hall, id=1, capacity=100}
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 INFO  CinemaHallDaoImpl:29 - New cinema hall 1 has been added to the database
2020-05-22 01:55:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:16 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:16 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:55:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:55:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:16 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:16 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Small cozy hall, id=2, capacity=40}
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 INFO  CinemaHallDaoImpl:29 - New cinema hall 2 has been added to the database
2020-05-22 01:55:16 INFO  CinemaHallDaoImpl:50 - All cinema halls retrieved from the database
2020-05-22 01:55:16 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:55:16 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:55:16 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-22 01:55:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-22 01:55:16 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:55:16 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-22 01:55:16 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.CinemaHall)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:55:16 DEBUG JoinProcessor:296 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-22 01:55:16 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=cinema.model.CinemaHall}}

2020-05-22 01:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:16 DEBUG SQL:128 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:55:16 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:55:16 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#1]
2020-05-22 01:55:16 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:55:16 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#2]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:16 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:16 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:55:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:55:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:16 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:16 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:16 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#1, movie=cinema.model.Movie#1, id=1, time=2020-05-30T10:00}
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:16 INFO  MovieSessionDao:34 - New movie session 1  has been added to the database
2020-05-22 01:55:16 INFO  MovieSessionDao:61 - Available movie sessions has been retrieved
2020-05-22 01:55:16 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'time'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-22 01:55:16 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:55:16 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-22 01:55:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:55:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:55:16 DEBUG DotNode:694 - getDataType() : movie -> org.hibernate.type.ManyToOneType(cinema.model.Movie)
2020-05-22 01:55:16 DEBUG DotNode:652 - dereferenceShortcut() : property movie in cinema.model.MovieSession does not require a join.
2020-05-22 01:55:16 DEBUG DotNode:681 - Terminal getPropertyPath = [movie]
2020-05-22 01:55:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-22 01:55:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:55:16 DEBUG DotNode:694 - getDataType() : time -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:55:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.time -> moviesessi0_.time
2020-05-22 01:55:16 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:55:16 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( >= ( moviesessi0_.time moviesessi0_.id time ) ? ) ) ) )
2020-05-22 01:55:16 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  | path: generatedAlias0.movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             | path: generatedAlias0.time
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: time
             \-ParameterNode

2020-05-22 01:55:16 DEBUG JoinProcessor:296 - Using FROM fragment [movie_session moviesessi0_]
2020-05-22 01:55:16 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'moviesessi0_.time' {propertyName=time,dereferenceType=PRIMITIVE,getPropertyPath=time,path=generatedAlias0.time,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'time' {originalText=time}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@2dc995f4}

2020-05-22 01:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:55:16 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:16 DEBUG SQL:128 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:55:16 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:55:16 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#1]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#1]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 1
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:55:16 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:55:16 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#1
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG SQL:128 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:55:16 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:55:16 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.Movie#1
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-30T10:00
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:16 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#1]
2020-05-22 01:55:16 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:48 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 01:55:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 01:55:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 01:55:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 01:55:48 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 01:55:48 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 01:55:48 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 01:55:48 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 01:55:48 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 01:55:48 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 01:55:49 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 01:55:49 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 01:55:49 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 01:55:49 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 01:55:49 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 01:55:49 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@21a21c64
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62ef27a8
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f5ce22
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@512535ff
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5adb0db3
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46268f08
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67304a40
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5023bb8b
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dca0d64
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2cc44ad
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@63dd899
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@40844aab
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@447a020
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@340b9973
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53d102a2
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1338fb5
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7103cb56
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48d5f34e
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fc258b1
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ff65192
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dd80673
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4af0df05
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57ea113a
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@acdb094
2020-05-22 01:55:49 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@674bd420
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:55:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 01:55:49 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 01:55:49 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 01:55:49 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 01:55:49 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 01:55:49 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 01:55:50 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 01:55:50 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 01:55:50 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 01:55:50 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 01:55:50 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 01:55:50 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 01:55:51 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 01:55:51 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 01:55:51 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@272a179c]
2020-05-22 01:55:51 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:55:51 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 01:55:51 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:55:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 01:55:51 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:55:51 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:55:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:55:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 01:55:51 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:55:51 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 01:55:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 01:55:51 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 01:55:51 DEBUG PropertyBinder:266 - Building property title
2020-05-22 01:55:51 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.CinemaHall
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:55:51 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-22 01:55:51 DEBUG EntityBinder:873 - Bind entity cinema.model.CinemaHall on table cinema_hall
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:55:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:id]
2020-05-22 01:55:51 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:55:51 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:55:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-22 01:55:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:capacity]
2020-05-22 01:55:51 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-22 01:55:51 DEBUG PropertyBinder:266 - Building property capacity
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:55:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:description]
2020-05-22 01:55:51 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:55:51 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:55:51 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.MovieSession
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:55:51 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-22 01:55:51 DEBUG EntityBinder:873 - Bind entity cinema.model.MovieSession on table movie_session
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:55:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:id]
2020-05-22 01:55:51 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:55:51 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:55:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:51 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:51 DEBUG PropertyBinder:266 - Building property movie
2020-05-22 01:55:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=time, insertable=true, updatable=true, unique=false}
2020-05-22 01:55:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property time with lazy=false
2020-05-22 01:55:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:time]
2020-05-22 01:55:51 DEBUG SimpleValueBinder:411 - building SimpleValue for time
2020-05-22 01:55:51 DEBUG PropertyBinder:266 - Building property time
2020-05-22 01:55:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:55:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:55:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 01:55:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:55:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-22 01:55:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:55:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:55:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for time
2020-05-22 01:55:51 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 01:55:51 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-22 01:55:51 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-22 01:55:51 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:55:51 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:55:51 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:55:51 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:55:51 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 01:55:51 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 01:55:51 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 01:55:51 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 01:55:51 DEBUG Settings:72 - Statistics: disabled
2020-05-22 01:55:51 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 01:55:51 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 01:55:51 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 01:55:51 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 01:55:51 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 01:55:51 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 01:55:51 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 01:55:51 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 01:55:51 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 01:55:51 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 01:55:51 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 01:55:51 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 01:55:51 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 01:55:51 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 01:55:51 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 01:55:51 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 01:55:51 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 01:55:51 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 01:55:51 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 01:55:51 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 01:55:51 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 01:55:51 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 01:55:51 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 01:55:51 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 01:55:51 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 01:55:51 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 01:55:51 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 01:55:51 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 01:55:51 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 01:55:51 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 01:55:51 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 01:55:51 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 01:55:51 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 01:55:51 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 01:55:51 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 01:55:51 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2b329bbd, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 01:55:51 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 01:55:51 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 01:55:51 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f3021cb]
2020-05-22 01:55:51 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:55:51 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:55:51 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:55:51 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:55:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:55:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:55:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:55:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:55:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:55:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:55:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:55:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.CinemaHall
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3860 -  Version select: select id from cinema_hall where id =?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:55:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d831c2]
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:55:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:55:52 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:55:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb740f2]
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:55:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:55:52 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:55:52 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:55:52 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.MovieSession
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie_session where id =?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaha3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.time as time2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, time, id) values (?, ?, ?, ?)
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, time=? where id=?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:55:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed922e1]
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:55:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338b49d3]
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:55:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af91cc8]
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:55:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:55:52 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:55:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6056232d]
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:55:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107bfcb2]
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:55:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab26378]
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:55:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:55:52 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:55:52 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:55:52 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 01:55:52 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 01:55:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404eca05]
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:55:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:55:52 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:55:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a91c9b]
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:55:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:55:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:55:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:55:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:55:52 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:55:52 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:55:52 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:55:52 DEBUG SQL:128 - alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr
2020-05-22 01:55:52 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@40f35e52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:55:52 DEBUG SQL:128 - alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39
2020-05-22 01:55:52 DEBUG SQL:128 - drop table if exists cinema_hall
2020-05-22 01:55:52 DEBUG SQL:128 - drop table if exists movie
2020-05-22 01:55:52 DEBUG SQL:128 - drop table if exists movie_session
2020-05-22 01:55:52 DEBUG SQL:128 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:55:52 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e766822] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:55:52 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:55:52 DEBUG SQL:128 - create table movie_session (id bigint not null auto_increment, time datetime(6), cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=InnoDB
2020-05-22 01:55:52 DEBUG SQL:128 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-22 01:55:52 DEBUG SQL:128 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-22 01:55:52 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 01:55:52 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 01:55:52 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:55:52 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:55:52 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 01:55:52 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 01:55:52 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12ad1b2a
2020-05-22 01:55:52 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 78306966-643d-49f8-a94b-e3a509560561 (<unnamed>)
2020-05-22 01:55:52 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 01:55:52 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 01:55:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:52 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:52 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:52 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:55:52 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:55:52 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:52 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:52 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:52 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 01:55:52 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:52 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:52 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 01:55:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:52 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:52 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:52 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:55:52 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:55:52 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:52 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:52 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:52 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 01:55:52 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:52 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:52 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 01:55:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:52 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:52 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:52 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:55:52 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 01:55:52 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:52 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:52 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:52 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:52 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 01:55:52 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:52 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:52 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 01:55:52 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 01:55:53 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 01:55:53 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@414f87a9
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:55:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:55:53 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:55:53 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 01:55:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 01:55:53 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:55:53 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 01:55:53 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:55:53 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 01:55:53 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 01:55:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:55:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:53 DEBUG SQL:128 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:55:53 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:55:53 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 01:55:53 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:55:53 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 01:55:53 DEBUG Loader:384 - Result set row: 2
2020-05-22 01:55:53 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 01:55:53 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:53 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:53 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:53 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:53 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:55:53 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:55:53 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:53 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:53 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:53 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Big hall, id=1, capacity=100}
2020-05-22 01:55:53 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:53 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:53 INFO  CinemaHallDaoImpl:29 - New cinema hall 1 has been added to the database
2020-05-22 01:55:53 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:53 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:53 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:53 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:55:53 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:55:53 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:53 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:53 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:53 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Small cozy hall, id=2, capacity=40}
2020-05-22 01:55:53 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:53 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:53 INFO  CinemaHallDaoImpl:29 - New cinema hall 2 has been added to the database
2020-05-22 01:55:53 INFO  CinemaHallDaoImpl:50 - All cinema halls retrieved from the database
2020-05-22 01:55:53 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:55:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:55:53 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:55:53 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-22 01:55:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-22 01:55:53 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:55:53 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-22 01:55:53 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.CinemaHall)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:55:53 DEBUG JoinProcessor:296 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-22 01:55:53 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=cinema.model.CinemaHall}}

2020-05-22 01:55:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:55:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:53 DEBUG SQL:128 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:55:53 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:55:53 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#1]
2020-05-22 01:55:53 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:55:53 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#2]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 01:55:53 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:53 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:53 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:53 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:53 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:55:53 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:55:53 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:53 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:53 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:53 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#1, movie=cinema.model.Movie#1, id=1, time=2020-05-30T10:00}
2020-05-22 01:55:53 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:53 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:53 INFO  MovieSessionDao:34 - New movie session 1  has been added to the database
2020-05-22 01:55:53 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:55:53 DEBUG TransactionImpl:81 - begin
2020-05-22 01:55:53 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:55:53 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:55:53 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:55:53 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:55:53 DEBUG TransactionImpl:98 - committing
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:55:53 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:55:53 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:55:53 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#2, movie=cinema.model.Movie#1, id=2, time=2020-05-25T19:00}
2020-05-22 01:55:53 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:53 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:55:53 INFO  MovieSessionDao:34 - New movie session 2  has been added to the database
2020-05-22 01:55:53 INFO  MovieSessionDao:61 - Available movie sessions has been retrieved
2020-05-22 01:55:53 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:55:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'time'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-22 01:55:53 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:55:53 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-22 01:55:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:55:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:55:53 DEBUG DotNode:694 - getDataType() : movie -> org.hibernate.type.ManyToOneType(cinema.model.Movie)
2020-05-22 01:55:53 DEBUG DotNode:652 - dereferenceShortcut() : property movie in cinema.model.MovieSession does not require a join.
2020-05-22 01:55:53 DEBUG DotNode:681 - Terminal getPropertyPath = [movie]
2020-05-22 01:55:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-22 01:55:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:55:53 DEBUG DotNode:694 - getDataType() : time -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:55:53 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.time -> moviesessi0_.time
2020-05-22 01:55:53 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:55:53 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( >= ( moviesessi0_.time moviesessi0_.id time ) ? ) ) ) )
2020-05-22 01:55:53 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  | path: generatedAlias0.movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             | path: generatedAlias0.time
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: time
             \-ParameterNode

2020-05-22 01:55:53 DEBUG JoinProcessor:296 - Using FROM fragment [movie_session moviesessi0_]
2020-05-22 01:55:53 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'moviesessi0_.time' {propertyName=time,dereferenceType=PRIMITIVE,getPropertyPath=time,path=generatedAlias0.time,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'time' {originalText=time}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@2dc995f4}

2020-05-22 01:55:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:55:53 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:55:53 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:55:53 DEBUG SQL:128 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:55:53 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:55:53 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#1]
2020-05-22 01:55:53 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:55:53 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#2]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#1]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 1
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:55:53 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:55:53 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#1
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG SQL:128 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:55:53 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:55:53 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.Movie#1
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-30T10:00
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#1]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#2]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 2
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:55:53 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 01:55:53 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#2
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-25T19:00
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 01:55:53 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#2]
2020-05-22 01:55:53 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:42 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 01:58:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 01:58:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 01:58:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 01:58:42 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 01:58:42 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 01:58:43 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 01:58:43 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 01:58:43 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 01:58:43 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 01:58:43 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 01:58:43 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 01:58:43 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 01:58:43 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 01:58:43 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 01:58:43 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@21a21c64
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62ef27a8
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f5ce22
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5143c662
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74bada02
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db57326
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4982cc36
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@512535ff
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5adb0db3
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497486b3
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79d94571
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46268f08
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67304a40
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5023bb8b
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dca0d64
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@77b14724
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2cc44ad
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@63dd899
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@40844aab
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@447a020
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@340b9973
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53d102a2
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1338fb5
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7103cb56
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48d5f34e
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fc258b1
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ff65192
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dd80673
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4af0df05
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57ea113a
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@acdb094
2020-05-22 01:58:44 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@674bd420
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 01:58:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 01:58:44 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 01:58:44 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 01:58:44 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 01:58:44 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 01:58:44 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 01:58:44 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 01:58:45 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 01:58:45 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 01:58:45 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 01:58:45 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 01:58:45 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 01:58:45 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 01:58:45 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 01:58:45 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@272a179c]
2020-05-22 01:58:46 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:58:46 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 01:58:46 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:58:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:58:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 01:58:46 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:58:46 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:58:46 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:58:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:58:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 01:58:46 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:58:46 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 01:58:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 01:58:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 01:58:46 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 01:58:46 DEBUG PropertyBinder:266 - Building property title
2020-05-22 01:58:46 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.CinemaHall
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:58:46 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-22 01:58:46 DEBUG EntityBinder:873 - Bind entity cinema.model.CinemaHall on table cinema_hall
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:58:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:58:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:id]
2020-05-22 01:58:46 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:58:46 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:58:46 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-22 01:58:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-22 01:58:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:capacity]
2020-05-22 01:58:46 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-22 01:58:46 DEBUG PropertyBinder:266 - Building property capacity
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 01:58:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 01:58:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:description]
2020-05-22 01:58:46 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 01:58:46 DEBUG PropertyBinder:266 - Building property description
2020-05-22 01:58:46 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.MovieSession
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 01:58:46 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-22 01:58:46 DEBUG EntityBinder:873 - Bind entity cinema.model.MovieSession on table movie_session
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 01:58:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 01:58:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:id]
2020-05-22 01:58:46 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 01:58:46 DEBUG PropertyBinder:266 - Building property id
2020-05-22 01:58:46 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-22 01:58:46 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-22 01:58:46 DEBUG PropertyBinder:266 - Building property movie
2020-05-22 01:58:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=time, insertable=true, updatable=true, unique=false}
2020-05-22 01:58:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property time with lazy=false
2020-05-22 01:58:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:time]
2020-05-22 01:58:46 DEBUG SimpleValueBinder:411 - building SimpleValue for time
2020-05-22 01:58:46 DEBUG PropertyBinder:266 - Building property time
2020-05-22 01:58:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:58:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:58:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 01:58:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:58:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-22 01:58:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 01:58:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 01:58:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for time
2020-05-22 01:58:46 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 01:58:46 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-22 01:58:46 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-22 01:58:46 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:58:46 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:58:46 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 01:58:46 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 01:58:46 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 01:58:46 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 01:58:46 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 01:58:46 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 01:58:46 DEBUG Settings:72 - Statistics: disabled
2020-05-22 01:58:46 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 01:58:46 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 01:58:46 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 01:58:46 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 01:58:46 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 01:58:46 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 01:58:46 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 01:58:46 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 01:58:46 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 01:58:46 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 01:58:46 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 01:58:46 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 01:58:46 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 01:58:46 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 01:58:46 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 01:58:46 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 01:58:46 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 01:58:46 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 01:58:46 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 01:58:46 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 01:58:46 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 01:58:46 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 01:58:46 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 01:58:46 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 01:58:46 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 01:58:46 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 01:58:46 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 01:58:46 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 01:58:46 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 01:58:46 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 01:58:46 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 01:58:46 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 01:58:46 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 01:58:46 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 01:58:46 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 01:58:46 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2b329bbd, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 01:58:46 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 01:58:46 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 01:58:46 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f3021cb]
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 01:58:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 01:58:46 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.CinemaHall
2020-05-22 01:58:46 DEBUG AbstractEntityPersister:3860 -  Version select: select id from cinema_hall where id =?
2020-05-22 01:58:46 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-22 01:58:46 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-22 01:58:46 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-22 01:58:46 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-22 01:58:46 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:58:46 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d831c2]
2020-05-22 01:58:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:58:46 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:58:46 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:58:46 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:58:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:58:47 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:58:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb740f2]
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:58:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:58:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:58:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 01:58:47 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:58:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:58:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.MovieSession
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie_session where id =?
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaha3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.time as time2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, time, id) values (?, ?, ?, ?)
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, time=? where id=?
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:58:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed922e1]
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:58:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338b49d3]
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:58:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af91cc8]
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:58:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:58:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:58:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:58:47 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:58:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6056232d]
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 01:58:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107bfcb2]
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 01:58:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab26378]
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 01:58:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:58:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:58:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 01:58:47 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 01:58:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:58:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 01:58:47 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 01:58:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404eca05]
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:58:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:58:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:58:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:58:47 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:58:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a91c9b]
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 01:58:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 01:58:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 01:58:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 01:58:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 01:58:47 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:58:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:58:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:58:47 DEBUG SQL:128 - alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr
2020-05-22 01:58:47 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@40f35e52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:58:47 DEBUG SQL:128 - alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39
2020-05-22 01:58:47 DEBUG SQL:128 - drop table if exists cinema_hall
2020-05-22 01:58:47 DEBUG SQL:128 - drop table if exists movie
2020-05-22 01:58:47 DEBUG SQL:128 - drop table if exists movie_session
2020-05-22 01:58:47 DEBUG SQL:128 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:58:47 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e766822] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 01:58:47 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 01:58:47 DEBUG SQL:128 - create table movie_session (id bigint not null auto_increment, time datetime(6), cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=InnoDB
2020-05-22 01:58:47 DEBUG SQL:128 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-22 01:58:47 DEBUG SQL:128 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-22 01:58:47 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 01:58:47 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 01:58:47 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:58:47 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 01:58:47 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 01:58:47 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 01:58:47 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12ad1b2a
2020-05-22 01:58:47 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 17fc9aec-5761-4d58-92f9-0872692a454d (<unnamed>)
2020-05-22 01:58:47 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 01:58:47 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 01:58:47 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:58:47 DEBUG TransactionImpl:81 - begin
2020-05-22 01:58:47 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:58:47 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:58:47 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:58:47 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:58:47 DEBUG TransactionImpl:98 - committing
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:58:47 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:58:47 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 01:58:47 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:58:47 DEBUG TransactionImpl:81 - begin
2020-05-22 01:58:47 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:58:47 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:58:47 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:58:47 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:58:47 DEBUG TransactionImpl:98 - committing
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:58:47 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:58:47 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 01:58:47 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:58:47 DEBUG TransactionImpl:81 - begin
2020-05-22 01:58:47 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:58:47 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 01:58:47 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 01:58:47 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:58:47 DEBUG TransactionImpl:98 - committing
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:58:47 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:58:47 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 01:58:47 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 01:58:47 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 01:58:47 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@414f87a9
2020-05-22 01:58:47 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:58:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:58:47 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:58:47 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:58:47 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 01:58:47 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 01:58:47 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:58:47 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 01:58:47 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:58:47 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 01:58:47 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:58:47 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 01:58:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:58:47 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 01:58:47 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:58:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:58:47 DEBUG SQL:128 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 01:58:47 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:58:47 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 01:58:47 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:58:47 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 01:58:47 DEBUG Loader:384 - Result set row: 2
2020-05-22 01:58:47 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:58:47 DEBUG TransactionImpl:81 - begin
2020-05-22 01:58:47 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:58:47 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:58:47 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:58:47 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:58:47 DEBUG TransactionImpl:98 - committing
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:58:47 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:58:47 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Big hall, id=1, capacity=100}
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 INFO  CinemaHallDaoImpl:29 - New cinema hall 1 has been added to the database
2020-05-22 01:58:47 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:58:47 DEBUG TransactionImpl:81 - begin
2020-05-22 01:58:47 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:58:47 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 01:58:47 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:58:47 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:58:47 DEBUG TransactionImpl:98 - committing
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:58:47 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:58:47 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Small cozy hall, id=2, capacity=40}
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 INFO  CinemaHallDaoImpl:29 - New cinema hall 2 has been added to the database
2020-05-22 01:58:47 INFO  CinemaHallDaoImpl:50 - All cinema halls retrieved from the database
2020-05-22 01:58:47 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-22 01:58:47 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:58:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:58:47 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 01:58:47 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:58:47 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-22 01:58:47 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-22 01:58:47 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:58:47 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-22 01:58:47 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.CinemaHall)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 01:58:47 DEBUG JoinProcessor:296 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-22 01:58:47 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:58:47 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=cinema.model.CinemaHall}}

2020-05-22 01:58:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:58:47 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 01:58:47 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:58:47 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:58:47 DEBUG SQL:128 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 01:58:47 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:58:47 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#1]
2020-05-22 01:58:47 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:58:47 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#2]
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:47 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:58:47 DEBUG TransactionImpl:81 - begin
2020-05-22 01:58:47 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:58:47 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:58:47 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 01:58:47 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:58:47 DEBUG TransactionImpl:98 - committing
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:58:47 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:58:47 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#1, movie=cinema.model.Movie#1, id=1, time=2020-05-30T10:00}
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 INFO  MovieSessionDao:34 - New movie session 1  has been added to the database
2020-05-22 01:58:47 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:58:47 DEBUG TransactionImpl:81 - begin
2020-05-22 01:58:47 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:58:47 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:58:47 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 01:58:47 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:58:47 DEBUG TransactionImpl:98 - committing
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:58:47 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:58:47 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#2, movie=cinema.model.Movie#1, id=2, time=2020-05-25T19:00}
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 INFO  MovieSessionDao:34 - New movie session 2  has been added to the database
2020-05-22 01:58:47 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:58:47 DEBUG TransactionImpl:81 - begin
2020-05-22 01:58:47 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:58:47 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:58:47 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 01:58:47 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:58:47 DEBUG TransactionImpl:98 - committing
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:58:47 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:58:47 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#1, movie=cinema.model.Movie#1, id=3, time=2020-05-20T19:00}
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:47 INFO  MovieSessionDao:34 - New movie session 3  has been added to the database
2020-05-22 01:58:47 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 01:58:47 DEBUG TransactionImpl:81 - begin
2020-05-22 01:58:47 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 01:58:47 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 01:58:47 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 4
2020-05-22 01:58:47 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 01:58:47 DEBUG TransactionImpl:98 - committing
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 01:58:47 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 01:58:47 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 01:58:47 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#2, movie=cinema.model.Movie#2, id=4, time=2020-05-30T10:00}
2020-05-22 01:58:48 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:48 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 01:58:48 INFO  MovieSessionDao:34 - New movie session 4  has been added to the database
2020-05-22 01:58:48 INFO  MovieSessionDao:61 - Available movie sessions has been retrieved
2020-05-22 01:58:48 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:58:48 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:58:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:58:48 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'time'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-22 01:58:48 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 01:58:48 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-22 01:58:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:58:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:58:48 DEBUG DotNode:694 - getDataType() : movie -> org.hibernate.type.ManyToOneType(cinema.model.Movie)
2020-05-22 01:58:48 DEBUG DotNode:652 - dereferenceShortcut() : property movie in cinema.model.MovieSession does not require a join.
2020-05-22 01:58:48 DEBUG DotNode:681 - Terminal getPropertyPath = [movie]
2020-05-22 01:58:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-22 01:58:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 01:58:48 DEBUG DotNode:694 - getDataType() : time -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 01:58:48 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.time -> moviesessi0_.time
2020-05-22 01:58:48 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 01:58:48 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( >= ( moviesessi0_.time moviesessi0_.id time ) ? ) ) ) )
2020-05-22 01:58:48 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  | path: generatedAlias0.movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             | path: generatedAlias0.time
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: time
             \-ParameterNode

2020-05-22 01:58:48 DEBUG JoinProcessor:296 - Using FROM fragment [movie_session moviesessi0_]
2020-05-22 01:58:48 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 01:58:48 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'moviesessi0_.time' {propertyName=time,dereferenceType=PRIMITIVE,getPropertyPath=time,path=generatedAlias0.time,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'time' {originalText=time}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@2dc995f4}

2020-05-22 01:58:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:58:48 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 01:58:48 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:58:48 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 01:58:48 DEBUG SQL:128 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 01:58:48 DEBUG Loader:384 - Result set row: 0
2020-05-22 01:58:48 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#1]
2020-05-22 01:58:48 DEBUG Loader:384 - Result set row: 1
2020-05-22 01:58:48 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#2]
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#1]
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 1
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:58:48 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 01:58:48 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#1
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG SQL:128 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 01:58:48 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 01:58:48 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.Movie#1
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-30T10:00
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#1]
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#2]
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 2
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 01:58:48 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 01:58:48 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#2
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-25T19:00
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 01:58:48 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#2]
2020-05-22 01:58:48 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:45 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:18:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:18:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:18:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:18:45 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 11:18:45 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:18:46 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 11:18:46 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 11:18:46 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 11:18:46 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:18:46 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:18:46 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:18:46 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:18:46 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:18:46 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:18:46 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@21a21c64
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62ef27a8
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f5ce22
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@289710d9
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5143c662
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74bada02
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db57326
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4982cc36
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4982cc36
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@512535ff
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5adb0db3
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@497486b3
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497486b3
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@79d94571
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79d94571
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46268f08
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67304a40
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5023bb8b
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dca0d64
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@77b14724
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@77b14724
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@77b14724
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2cc44ad
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@63dd899
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@40844aab
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@447a020
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@340b9973
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53d102a2
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1338fb5
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7103cb56
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48d5f34e
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fc258b1
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ff65192
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dd80673
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4af0df05
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57ea113a
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@acdb094
2020-05-22 11:18:47 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@674bd420
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:18:47 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:18:47 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:18:47 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 11:18:47 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 11:18:47 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:18:47 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:18:47 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:18:48 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 11:18:48 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 11:18:48 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:18:48 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 11:18:48 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:18:48 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:18:48 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:18:48 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@272a179c]
2020-05-22 11:18:48 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:18:48 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 11:18:48 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:18:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:18:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 11:18:48 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:18:48 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:18:48 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 11:18:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 11:18:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 11:18:48 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 11:18:48 DEBUG PropertyBinder:266 - Building property description
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:18:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:18:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 11:18:48 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:18:48 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:18:48 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.CinemaHall
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:18:48 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-22 11:18:48 DEBUG EntityBinder:873 - Bind entity cinema.model.CinemaHall on table cinema_hall
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:18:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:18:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:id]
2020-05-22 11:18:48 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:18:48 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:18:48 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-22 11:18:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-22 11:18:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:capacity]
2020-05-22 11:18:48 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-22 11:18:48 DEBUG PropertyBinder:266 - Building property capacity
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 11:18:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 11:18:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:description]
2020-05-22 11:18:48 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 11:18:48 DEBUG PropertyBinder:266 - Building property description
2020-05-22 11:18:48 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.MovieSession
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:18:48 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-22 11:18:48 DEBUG EntityBinder:873 - Bind entity cinema.model.MovieSession on table movie_session
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:18:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:18:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:id]
2020-05-22 11:18:48 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:18:48 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:18:48 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-22 11:18:48 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-22 11:18:48 DEBUG PropertyBinder:266 - Building property movie
2020-05-22 11:18:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=time, insertable=true, updatable=true, unique=false}
2020-05-22 11:18:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property time with lazy=false
2020-05-22 11:18:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:time]
2020-05-22 11:18:48 DEBUG SimpleValueBinder:411 - building SimpleValue for time
2020-05-22 11:18:48 DEBUG PropertyBinder:266 - Building property time
2020-05-22 11:18:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:18:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 11:18:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:18:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:18:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-22 11:18:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 11:18:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:18:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for time
2020-05-22 11:18:48 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 11:18:48 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-22 11:18:48 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-22 11:18:48 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 11:18:48 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 11:18:48 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 11:18:48 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 11:18:48 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 11:18:48 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:18:48 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:18:48 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:18:48 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:18:48 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:18:48 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:18:48 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:18:48 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:18:48 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 11:18:48 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:18:48 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:18:48 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:18:48 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:18:48 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:18:48 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:18:48 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:18:48 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:18:48 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:18:48 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:18:48 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:18:48 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:18:48 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:18:48 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:18:48 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:18:48 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:18:48 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:18:48 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:18:48 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:18:48 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:18:48 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:18:48 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:18:48 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:18:48 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:18:48 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:18:48 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 11:18:48 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 11:18:48 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 11:18:48 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 11:18:48 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 11:18:48 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2b329bbd, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 11:18:48 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:18:48 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 11:18:48 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f3021cb]
2020-05-22 11:18:48 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 11:18:48 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 11:18:48 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 11:18:48 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 11:18:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 11:18:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 11:18:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 11:18:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 11:18:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 11:18:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 11:18:49 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 11:18:49 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.CinemaHall
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3860 -  Version select: select id from cinema_hall where id =?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 11:18:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d831c2]
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 11:18:49 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:18:49 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:18:49 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:18:49 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:18:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb740f2]
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 11:18:49 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:18:49 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:18:49 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:18:49 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:18:49 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:18:49 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.MovieSession
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie_session where id =?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaha3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.time as time2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, time, id) values (?, ?, ?, ?)
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, time=? where id=?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 11:18:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed922e1]
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 11:18:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338b49d3]
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 11:18:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af91cc8]
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 11:18:49 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:18:49 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:18:49 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 11:18:49 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 11:18:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6056232d]
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 11:18:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107bfcb2]
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 11:18:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab26378]
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 11:18:49 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:18:49 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:18:49 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 11:18:49 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 11:18:49 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 11:18:49 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 11:18:49 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 11:18:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404eca05]
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:18:49 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:18:49 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:18:49 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 11:18:49 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 11:18:49 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a91c9b]
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 11:18:49 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:18:49 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:18:49 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:18:49 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 11:18:49 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 11:18:49 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 11:18:49 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 11:18:49 DEBUG SQL:128 - alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr
2020-05-22 11:18:49 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@40f35e52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:18:49 DEBUG SQL:128 - alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39
2020-05-22 11:18:49 DEBUG SQL:128 - drop table if exists cinema_hall
2020-05-22 11:18:49 DEBUG SQL:128 - drop table if exists movie
2020-05-22 11:18:49 DEBUG SQL:128 - drop table if exists movie_session
2020-05-22 11:18:49 DEBUG SQL:128 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=InnoDB
2020-05-22 11:18:49 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e766822] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:18:49 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 11:18:49 DEBUG SQL:128 - create table movie_session (id bigint not null auto_increment, time datetime(6), cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=InnoDB
2020-05-22 11:18:49 DEBUG SQL:128 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-22 11:18:49 DEBUG SQL:128 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-22 11:18:49 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:18:49 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:18:49 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:18:49 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:18:49 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:18:49 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:18:49 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12ad1b2a
2020-05-22 11:18:49 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 0da471ac-3e09-4069-a52e-066c18091603 (<unnamed>)
2020-05-22 11:18:49 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:18:50 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:18:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:18:50 DEBUG TransactionImpl:81 - begin
2020-05-22 11:18:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:18:50 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 11:18:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:18:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:18:50 DEBUG TransactionImpl:98 - committing
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:18:50 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:18:50 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 11:18:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:18:50 DEBUG TransactionImpl:81 - begin
2020-05-22 11:18:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:18:50 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 11:18:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:18:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:18:50 DEBUG TransactionImpl:98 - committing
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:18:50 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:18:50 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 11:18:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:18:50 DEBUG TransactionImpl:81 - begin
2020-05-22 11:18:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:18:50 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 11:18:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 11:18:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:18:50 DEBUG TransactionImpl:98 - committing
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:18:50 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:18:50 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 11:18:50 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 11:18:50 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 11:18:50 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@414f87a9
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 11:18:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 11:18:50 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:18:50 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 11:18:50 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 11:18:50 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:18:50 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 11:18:50 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 11:18:50 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 11:18:50 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 11:18:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 11:18:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:18:50 DEBUG SQL:128 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 11:18:50 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:18:50 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 11:18:50 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:18:50 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 11:18:50 DEBUG Loader:384 - Result set row: 2
2020-05-22 11:18:50 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:18:50 DEBUG TransactionImpl:81 - begin
2020-05-22 11:18:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:18:50 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 11:18:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:18:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:18:50 DEBUG TransactionImpl:98 - committing
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:18:50 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:18:50 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Big hall, id=1, capacity=100}
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 INFO  CinemaHallDaoImpl:29 - New cinema hall 1 has been added to the database
2020-05-22 11:18:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:18:50 DEBUG TransactionImpl:81 - begin
2020-05-22 11:18:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:18:50 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 11:18:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:18:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:18:50 DEBUG TransactionImpl:98 - committing
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:18:50 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:18:50 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Small cozy hall, id=2, capacity=40}
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 INFO  CinemaHallDaoImpl:29 - New cinema hall 2 has been added to the database
2020-05-22 11:18:50 INFO  CinemaHallDaoImpl:50 - All cinema halls retrieved from the database
2020-05-22 11:18:50 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 11:18:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 11:18:50 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:18:50 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-22 11:18:50 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-22 11:18:50 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:18:50 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-22 11:18:50 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.CinemaHall)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 11:18:50 DEBUG JoinProcessor:296 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-22 11:18:50 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=cinema.model.CinemaHall}}

2020-05-22 11:18:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 11:18:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:18:50 DEBUG SQL:128 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 11:18:50 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:18:50 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#1]
2020-05-22 11:18:50 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:18:50 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#2]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:18:50 DEBUG TransactionImpl:81 - begin
2020-05-22 11:18:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:18:50 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 11:18:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:18:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:18:50 DEBUG TransactionImpl:98 - committing
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:18:50 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:18:50 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#1, movie=cinema.model.Movie#1, id=1, time=2020-05-30T10:00}
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 INFO  MovieSessionDao:34 - New movie session 1  has been added to the database
2020-05-22 11:18:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:18:50 DEBUG TransactionImpl:81 - begin
2020-05-22 11:18:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:18:50 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 11:18:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:18:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:18:50 DEBUG TransactionImpl:98 - committing
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:18:50 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:18:50 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#2, movie=cinema.model.Movie#1, id=2, time=2020-05-25T19:00}
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 INFO  MovieSessionDao:34 - New movie session 2  has been added to the database
2020-05-22 11:18:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:18:50 DEBUG TransactionImpl:81 - begin
2020-05-22 11:18:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:18:50 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 11:18:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 11:18:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:18:50 DEBUG TransactionImpl:98 - committing
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:18:50 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:18:50 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#1, movie=cinema.model.Movie#1, id=3, time=2020-05-20T19:00}
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 INFO  MovieSessionDao:34 - New movie session 3  has been added to the database
2020-05-22 11:18:50 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:18:50 DEBUG TransactionImpl:81 - begin
2020-05-22 11:18:50 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:18:50 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 11:18:50 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 4
2020-05-22 11:18:50 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:18:50 DEBUG TransactionImpl:98 - committing
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:18:50 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:18:50 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:18:50 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#2, movie=cinema.model.Movie#2, id=4, time=2020-05-30T10:00}
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:18:50 INFO  MovieSessionDao:34 - New movie session 4  has been added to the database
2020-05-22 11:18:50 INFO  MovieSessionDao:61 - Available movie sessions has been retrieved
2020-05-22 11:18:50 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 11:18:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'time'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-22 11:18:50 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:18:50 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-22 11:18:50 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 11:18:50 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 11:18:50 DEBUG DotNode:694 - getDataType() : movie -> org.hibernate.type.ManyToOneType(cinema.model.Movie)
2020-05-22 11:18:50 DEBUG DotNode:652 - dereferenceShortcut() : property movie in cinema.model.MovieSession does not require a join.
2020-05-22 11:18:50 DEBUG DotNode:681 - Terminal getPropertyPath = [movie]
2020-05-22 11:18:50 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-22 11:18:50 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 11:18:50 DEBUG DotNode:694 - getDataType() : time -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 11:18:50 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.time -> moviesessi0_.time
2020-05-22 11:18:50 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:18:50 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( >= ( moviesessi0_.time moviesessi0_.id time ) ? ) ) ) )
2020-05-22 11:18:50 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  | path: generatedAlias0.movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             | path: generatedAlias0.time
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: time
             \-ParameterNode

2020-05-22 11:18:50 DEBUG JoinProcessor:296 - Using FROM fragment [movie_session moviesessi0_]
2020-05-22 11:18:50 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'moviesessi0_.time' {propertyName=time,dereferenceType=PRIMITIVE,getPropertyPath=time,path=generatedAlias0.time,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'time' {originalText=time}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@2dc995f4}

2020-05-22 11:18:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 11:18:50 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 11:18:50 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:18:50 DEBUG SQL:128 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 11:18:50 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:18:50 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#1]
2020-05-22 11:18:50 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:18:50 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#2]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#1]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 1
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:18:50 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 11:18:50 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#1
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG SQL:128 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 11:18:50 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 11:18:50 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.Movie#1
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-30T10:00
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#1]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#2]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 2
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:18:50 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 11:18:50 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#2
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-25T19:00
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 11:18:50 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#2]
2020-05-22 11:18:50 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:06 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:43:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:43:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:43:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:43:06 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-22 11:43:06 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:43:06 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2020-05-22 11:43:06 WARN  deprecation:91 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
2020-05-22 11:43:06 DEBUG LocalXmlResourceResolver:95 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-05-22 11:43:06 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:43:06 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:43:06 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:43:06 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:43:06 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:43:06 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:43:06 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ea6e30c
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@21a21c64
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62ef27a8
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@74f5ce22
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@51acdf2e
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@289710d9
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@289710d9
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5143c662
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5143c662
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b1d6571
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@74bada02
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74bada02
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@db57326
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db57326
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77d67cf3
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66ac5762
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a12c404
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4982cc36
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4982cc36
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@512535ff
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5adb0db3
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2250b9f2
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f316aeb
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5674e1f2
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ff4357f
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f0e9815
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b1712f3
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2da59753
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d9ac0b4
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@497486b3
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497486b3
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@79d94571
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79d94571
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1852a3ff
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46268f08
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fc6f97f
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67304a40
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5023bb8b
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5cde6747
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d96543c
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b8d96d9
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fe1ce85
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52851b44
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dca0d64
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@77b14724
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@77b14724
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@77b14724
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b84fcf8
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2cc44ad
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@63dd899
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@34cdeda2
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b41e4dd
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@40844aab
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@447a020
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10ded6a9
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@340b9973
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ccbeb64
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3bcbb589
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53d102a2
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1338fb5
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@7103cb56
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54c62d71
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48d5f34e
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fc258b1
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ff65192
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dd80673
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4af0df05
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57ea113a
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@acdb094
2020-05-22 11:43:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@674bd420
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:43:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:43:07 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:43:07 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-22 11:43:07 INFO  pooling:121 - HHH10001001: Connection properties: {password=12345, user=root}
2020-05-22 11:43:07 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:43:07 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:43:07 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:43:08 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
2020-05-22 11:43:08 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
2020-05-22 11:43:08 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:43:08 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-05-22 11:43:08 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:43:08 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:43:08 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:43:08 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@272a179c]
2020-05-22 11:43:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.Movie
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:43:08 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-22 11:43:08 DEBUG EntityBinder:873 - Bind entity cinema.model.Movie on table movie
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:43:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:id]
2020-05-22 11:43:08 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:43:08 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:43:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 11:43:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:description]
2020-05-22 11:43:08 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 11:43:08 DEBUG PropertyBinder:266 - Building property description
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:43:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.Movie:title]
2020-05-22 11:43:08 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:43:08 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:43:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.CinemaHall
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:43:08 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-22 11:43:08 DEBUG EntityBinder:873 - Bind entity cinema.model.CinemaHall on table cinema_hall
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:43:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:id]
2020-05-22 11:43:08 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:43:08 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:43:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-22 11:43:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:capacity]
2020-05-22 11:43:08 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-22 11:43:08 DEBUG PropertyBinder:266 - Building property capacity
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-22 11:43:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.CinemaHall:description]
2020-05-22 11:43:08 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-22 11:43:08 DEBUG PropertyBinder:266 - Building property description
2020-05-22 11:43:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: cinema.model.MovieSession
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:43:08 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-22 11:43:08 DEBUG EntityBinder:873 - Bind entity cinema.model.MovieSession on table movie_session
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:43:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:id]
2020-05-22 11:43:08 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:43:08 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:43:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:08 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:08 DEBUG PropertyBinder:266 - Building property movie
2020-05-22 11:43:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=time, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property time with lazy=false
2020-05-22 11:43:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [cinema.model.MovieSession:time]
2020-05-22 11:43:08 DEBUG SimpleValueBinder:411 - building SimpleValue for time
2020-05-22 11:43:08 DEBUG PropertyBinder:266 - Building property time
2020-05-22 11:43:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:43:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 11:43:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:43:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:43:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-22 11:43:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-22 11:43:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:43:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for time
2020-05-22 11:43:08 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-22 11:43:08 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-22 11:43:08 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-22 11:43:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 11:43:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 11:43:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.CinemaHall
2020-05-22 11:43:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: cinema.model.Movie
2020-05-22 11:43:08 DEBUG SessionFactoryImpl:201 - Building session factory
2020-05-22 11:43:08 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:43:08 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:43:08 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:43:08 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:43:08 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:43:08 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:43:08 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:43:08 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:43:08 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-05-22 11:43:08 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:43:08 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:43:08 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:43:08 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:43:08 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:43:08 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:43:08 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:43:08 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:43:08 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:43:08 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:43:08 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:43:08 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:43:08 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:43:08 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:43:08 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:43:08 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:43:08 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:43:08 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:43:08 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:43:08 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:43:08 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:43:08 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:43:08 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:43:08 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:43:08 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:43:08 DEBUG Settings:111 - JPA compliance - query : disabled
2020-05-22 11:43:08 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-05-22 11:43:08 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-05-22 11:43:08 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-05-22 11:43:08 DEBUG SessionFactoryImpl:256 - Session factory constructed with filter configurations : {}
2020-05-22 11:43:08 DEBUG SessionFactoryImpl:257 - Instantiating session factory with properties: {java.specification.version=13, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\User\IdeaProjects\cinema_project\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\User\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\User\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-java8\5.4.15.Final\hibernate-java8-5.4.15.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=13, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-13.0.2\bin, sun.java.command=cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-13.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=12345, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=13.0.2+8, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=13.0.2, user.dir=C:\Users\User\IdeaProjects\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2b329bbd, java.library.path=C:\Program Files\Java\jdk-13.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Apache\maven\Bin;C:\Program Files\Apache\maven\Bin;%JAVA_HOMEE%\Bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.3.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=57.0}
2020-05-22 11:43:08 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:43:08 DEBUG SessionFactoryImpl:296 - Instantiated session factory
2020-05-22 11:43:08 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eba57a7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f3021cb]
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.CinemaHall] is safe
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.CinemaHall
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.MovieSession] is safe
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.MovieSession
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [cinema.model.Movie] is safe
2020-05-22 11:43:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cinema.model.Movie
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.CinemaHall
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3860 -  Version select: select id from cinema_hall where id =?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 11:43:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d831c2]
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 11:43:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:43:09 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:43:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb740f2]
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 11:43:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:43:09 DEBUG EntityLoader:137 - Static select for entity cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:43:09 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:43:09 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.MovieSession
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie_session where id =?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaha3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.time as time2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, time, id) values (?, ?, ?, ?)
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, time=? where id=?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 11:43:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed922e1]
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 11:43:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338b49d3]
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 11:43:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af91cc8]
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 11:43:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 11:43:09 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 11:43:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6056232d]
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-22 11:43:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107bfcb2]
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-22 11:43:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab26378]
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : time
2020-05-22 11:43:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=cinema.model.MovieSession, querySpaceUid=<gen:0>, path=cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=cinema.model.Movie, querySpaceUid=<gen:2>, path=cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-22 11:43:09 DEBUG EntityLoader:137 - Static select for entity cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-22 11:43:09 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 11:43:09 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaha3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.time as time2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3855 - Static SQL for entity: cinema.model.Movie
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3860 -  Version select: select id from movie where id =?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3863 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-22 11:43:09 DEBUG AbstractEntityPersister:3871 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-05-22 11:43:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404eca05]
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:43:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 11:43:09 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 11:43:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a91c9b]
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-22 11:43:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:43:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=cinema.model.Movie, querySpaceUid=<gen:0>, path=cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 11:43:09 DEBUG EntityLoader:137 - Static select for entity cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 11:43:09 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 11:43:09 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 11:43:09 DEBUG SQL:128 - alter table movie_session drop foreign key FK6jauch8jou1nsodork3heqqsr
2020-05-22 11:43:09 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@40f35e52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:43:09 DEBUG SQL:128 - alter table movie_session drop foreign key FKer8dsjajcvlud03f5165ajl39
2020-05-22 11:43:09 DEBUG SQL:128 - drop table if exists cinema_hall
2020-05-22 11:43:09 DEBUG SQL:128 - drop table if exists movie
2020-05-22 11:43:09 DEBUG SQL:128 - drop table if exists movie_session
2020-05-22 11:43:09 DEBUG SQL:128 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=InnoDB
2020-05-22 11:43:09 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e766822] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:43:09 DEBUG SQL:128 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=InnoDB
2020-05-22 11:43:09 DEBUG SQL:128 - create table movie_session (id bigint not null auto_increment, time datetime(6), cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=InnoDB
2020-05-22 11:43:09 DEBUG SQL:128 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-22 11:43:10 DEBUG SQL:128 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-22 11:43:10 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:43:10 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:43:10 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:43:10 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:43:10 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:43:10 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:43:10 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@12ad1b2a
2020-05-22 11:43:10 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 9da48f1c-5595-474a-a121-3ecb1cc95d3a (<unnamed>)
2020-05-22 11:43:10 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:43:10 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:43:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:10 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:10 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:10 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 11:43:10 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:43:10 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:10 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:10 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:10 DEBUG EntityPrinter:117 - cinema.model.Movie{description=This is awesome adventure movie!, id=1, title=Lord of the rings}
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 INFO  MovieDaoImpl:29 - New movie Lord of the rings 1 has been added to the database
2020-05-22 11:43:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:10 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:10 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:10 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 11:43:10 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:43:10 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:10 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:10 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:10 DEBUG EntityPrinter:117 - cinema.model.Movie{description=Keanu Reaves is starring here!, id=2, title=Matrix}
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 INFO  MovieDaoImpl:29 - New movie Matrix 2 has been added to the database
2020-05-22 11:43:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:10 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:10 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:10 DEBUG SQL:128 - insert into movie (description, title) values (?, ?)
2020-05-22 11:43:10 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 11:43:10 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:10 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:10 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:10 DEBUG EntityPrinter:117 - cinema.model.Movie{description=May the 4th be with you!, id=3, title=The Empire strikes back}
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 INFO  MovieDaoImpl:29 - New movie The Empire strikes back 3 has been added to the database
2020-05-22 11:43:10 INFO  MovieDaoImpl:50 - All movies retrieved from the database
2020-05-22 11:43:10 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-22 11:43:10 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@414f87a9
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 11:43:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 11:43:10 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:43:10 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-22 11:43:10 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-22 11:43:10 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:43:10 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-22 11:43:10 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.Movie)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 11:43:10 DEBUG JoinProcessor:296 - Using FROM fragment [movie movie0_]
2020-05-22 11:43:10 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=cinema.model.Movie}}

2020-05-22 11:43:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.Movie as generatedAlias0
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 11:43:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:10 DEBUG SQL:128 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-05-22 11:43:10 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:43:10 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#1]
2020-05-22 11:43:10 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:43:10 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#2]
2020-05-22 11:43:10 DEBUG Loader:384 - Result set row: 2
2020-05-22 11:43:10 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.Movie#3]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#2]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Keanu Reaves is starring here!
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Matrix
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#2]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#3]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = May the 4th be with you!
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = The Empire strikes back
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#3]
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:10 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:10 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:10 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 11:43:10 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:43:10 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:10 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:10 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:10 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Big hall, id=1, capacity=100}
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 INFO  CinemaHallDaoImpl:29 - New cinema hall 1 has been added to the database
2020-05-22 11:43:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:10 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:10 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:10 DEBUG SQL:128 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-22 11:43:10 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:43:10 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:10 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:10 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:10 DEBUG EntityPrinter:117 - cinema.model.CinemaHall{description=Small cozy hall, id=2, capacity=40}
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 INFO  CinemaHallDaoImpl:29 - New cinema hall 2 has been added to the database
2020-05-22 11:43:10 INFO  CinemaHallDaoImpl:50 - All cinema halls retrieved from the database
2020-05-22 11:43:10 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 11:43:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-22 11:43:10 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:43:10 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-22 11:43:10 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-22 11:43:10 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:43:10 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-22 11:43:10 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.CinemaHall)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-22 11:43:10 DEBUG JoinProcessor:296 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-22 11:43:10 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=cinema.model.CinemaHall}}

2020-05-22 11:43:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.CinemaHall as generatedAlias0
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 11:43:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:10 DEBUG SQL:128 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-22 11:43:10 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:43:10 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#1]
2020-05-22 11:43:10 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:43:10 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.CinemaHall#2]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:10 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:10 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:10 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 11:43:10 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:43:10 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:10 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:10 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:10 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#1, movie=cinema.model.Movie#1, id=1, time=2020-05-30T10:00}
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 INFO  MovieSessionDao:33 - New movie session 1  has been added to the database
2020-05-22 11:43:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:10 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:10 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:10 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 11:43:10 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:43:10 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:10 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:10 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:10 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#2, movie=cinema.model.Movie#1, id=2, time=2020-05-25T19:00}
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 INFO  MovieSessionDao:33 - New movie session 2  has been added to the database
2020-05-22 11:43:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:10 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:10 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:10 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 11:43:10 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 3
2020-05-22 11:43:10 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:10 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:10 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:10 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#1, movie=cinema.model.Movie#1, id=3, time=2020-05-20T19:00}
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 INFO  MovieSessionDao:33 - New movie session 3  has been added to the database
2020-05-22 11:43:10 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:10 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:10 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:10 DEBUG SQL:128 - insert into movie_session (cinemaHall_id, movie_id, time) values (?, ?, ?)
2020-05-22 11:43:10 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 4
2020-05-22 11:43:10 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:10 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:10 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:10 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:10 DEBUG EntityPrinter:117 - cinema.model.MovieSession{cinemaHall=cinema.model.CinemaHall#2, movie=cinema.model.Movie#2, id=4, time=2020-05-30T10:00}
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:10 INFO  MovieSessionDao:33 - New movie session 4  has been added to the database
2020-05-22 11:43:10 INFO  MovieSessionDao:60 - Available movie sessions has been retrieved
2020-05-22 11:43:10 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 11:43:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GE] Node: '>='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'time'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-22 11:43:10 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:43:10 DEBUG FromElement:153 - FromClause{level=1} : cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-22 11:43:10 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 11:43:10 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 11:43:10 DEBUG DotNode:694 - getDataType() : movie -> org.hibernate.type.ManyToOneType(cinema.model.Movie)
2020-05-22 11:43:10 DEBUG DotNode:652 - dereferenceShortcut() : property movie in cinema.model.MovieSession does not require a join.
2020-05-22 11:43:10 DEBUG DotNode:681 - Terminal getPropertyPath = [movie]
2020-05-22 11:43:10 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-22 11:43:10 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-22 11:43:10 DEBUG DotNode:694 - getDataType() : time -> org.hibernate.type.LocalDateTimeType@2dc995f4
2020-05-22 11:43:10 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.time -> moviesessi0_.time
2020-05-22 11:43:10 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:43:10 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( >= ( moviesessi0_.time moviesessi0_.id time ) ? ) ) ) )
2020-05-22 11:43:10 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  | path: generatedAlias0.movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             | path: generatedAlias0.time
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(cinema.model.MovieSession)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: time
             \-ParameterNode

2020-05-22 11:43:10 DEBUG JoinProcessor:296 - Using FROM fragment [movie_session moviesessi0_]
2020-05-22 11:43:10 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GE] BinaryLogicOperatorNode: '>='
             +-[DOT] DotNode: 'moviesessi0_.time' {propertyName=time,dereferenceType=PRIMITIVE,getPropertyPath=time,path=generatedAlias0.time,tableAlias=moviesessi0_,className=cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'time' {originalText=time}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@2dc995f4}

2020-05-22 11:43:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.time>=:param0 )
2020-05-22 11:43:10 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 11:43:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:10 DEBUG SQL:128 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaha3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.time as time2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.time>=?
2020-05-22 11:43:10 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:43:10 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#1]
2020-05-22 11:43:10 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:43:10 DEBUG Loader:1586 - Result row: EntityKey[cinema.model.MovieSession#2]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#1]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 1
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:43:10 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#1]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 100
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Big hall
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#1]
2020-05-22 11:43:10 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#1
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG SQL:128 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-22 11:43:10 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.Movie#1]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = This is awesome adventure movie!
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `title` : value = Lord of the rings
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.Movie#1]
2020-05-22 11:43:10 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.Movie#1
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-30T10:00
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#1]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.MovieSession#2]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `cinemaHall` : value = 2
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG SQL:128 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-22 11:43:10 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:180 - Resolving attributes for [cinema.model.CinemaHall#2]
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `capacity` : value = 40
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `description` : value = Small cozy hall
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.CinemaHall#2]
2020-05-22 11:43:10 DEBUG AbstractLoadPlanBasedEntityLoader:245 - Done entity load : cinema.model.CinemaHall#2
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `movie` : value = 1
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:195 - Processing attribute `time` : value = 2020-05-25T19:00
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:226 - Attribute (`time`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:10 DEBUG TwoPhaseLoad:351 - Done materializing entity [cinema.model.MovieSession#2]
2020-05-22 11:43:10 DEBUG LogicalConnectionManagedImpl:168 - Initiating JDBC connection release from afterTransaction
